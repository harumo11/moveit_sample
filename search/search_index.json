{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MoveIt!\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb Source \u3053\u3053\u306e\u7ffb\u8a33 \u53c2\u8003 material cheet sheet \u3053\u308c\u3089\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u901a\u3057\u3066MoveIt!\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\uff0e\u3061\u306a\u307f\u306b\uff0cMoveIt!\u306f\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3088\uff0e \u3053\u308c\u3089\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\uff0cFranka Emika Panda\u30ed\u30dc\u30c3\u30c8\u3092\u4f8b\u3068\u6307\u5b9a\u4f7f\u7528\u3057\u307e\u3059\uff0e \u3059\u3067\u306bMoveIt!\u306b\u5bfe\u5fdc\u3059\u308b\u7528\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30ed\u30dc\u30c3\u30c8\u3067\u3042\u308c\u3070\uff0c\u7c21\u5358\u306bPanda\u30ed\u30dc\u30c3\u30c8\u3092\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c \u53ef\u80fd\u3067\u3059\uff0e\u30ed\u30dc\u30c3\u30c8\u304c \u3059\u3050\u306b \u5229\u7528\u53ef\u306e\u304b\u3069\u3046\u304b\u306f MoveIt!\u3067\u3059\u3050\u306b\u4f7f\u7528\u53ef\u80fd\u306a \u30ed\u30dc\u30c3\u30c8\u306e\u30ea\u30b9\u30c8 \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e\u3082\u3057\uff0c\u30ea\u30b9\u30c8\u306b\u3042\u306a\u305f\u306e\u304a\u6c17\u306b\u5165\u308a\u306e \u30ed\u30dc\u30c3\u30c8\u304c\u7121\u3044\u5834\u5408\u306b\u306f\uff0c\u3042\u306a\u305f\u81ea\u8eab\u304cMoveIt!\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308c\u3070\uff0c\u3042\u306a\u305f\u306e\u30ed\u30dc\u30c3\u30c8\u3067MoveIt!\u3092 \u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e \u8a73\u3057\u304f\u306f\"\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u3067\u4f7f\u3046\u306b\u306f\"\u306e\u7ae0\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Note \u3053\u308c\u306fROS Melodic\u30d0\u30fc\u30b8\u30e7\u30f3\u306eMoveIt!\u306e\u548c\u8a33\u3067\u3059\uff0eKinetic\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f Kinetic \u82f1\u8a9e \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 MoveIt!\u3068Rviz \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 MoveIt!\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\uff0eRviz\u3068\u3068\u3082\u306b MoveGroup - C++\u3068Python\u306eROS\u30e9\u30c3\u30d1\u30fc - MoveIt!\u3092\u4f7f\u7528\u3059\u308b\u6700\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f move_group_interface \u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3059\uff0e \u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u521d\u5fc3\u8005\u306b\u304a\u3059\u3059\u3081\u3067\u3059\uff0e\u3055\u3089\u306b\uff0c\u3053\u306e\u30af\u30e9\u30b9\u306fMoveIt!\u306e \u591a\u304f\u306e\u6a5f\u80fd\u3078\u7d71\u4e00\u3055\u308c\u305f\u65b9\u6cd5\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Move Group C++ \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 Move Group Python \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 MoveIt! Commander \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 C++\u3092\u5229\u7528\u3057\u3066\u76f4\u63a5\u7684\u306bMoveIt!\u3092\u4f7f\u3046 MoveIt!\u3092\u5229\u7528\u3057\u3066\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u306fMoveIt!\u306eC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092 \u5229\u7528\u3057\u3066\u4e0b\u3055\u3044\uff0e\u3055\u3089\u306b\uff0c\u76f4\u63a5\u7684\u306bC++ API\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u591a\u304f\u306eROS\u30b5\u30fc\u30d3\u30b9/\u30a2\u30af\u30b7\u30e7\u30f3\u5c64\u3092 \u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u306e\u3067\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5927\u5e45\u306b\u5411\u4e0a\u3057\u307e\u3059\uff0e Robot Model \u3068 Robot State \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3(Planning Scene) \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3(ROS API) \u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0API \u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3 \u885d\u7a81\u306e\u8868\u793a \u6642\u9593\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a \u3086\u308b\u304f\u7d44\u307f\u5408\u308f\u3055\u3063\u305f\u62d8\u675f\u3068\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0 \u30d4\u30c3\u30af\uff06\u30d7\u30ec\u30a4\u30b9 \u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u3067\u4f7f\u3046\u306b\u306f \u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306eMoveIt!\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\uff0c \u3053\u306e\u30ea\u30b9\u30c8 \u3067 \u305d\u306e\u30ed\u30dc\u30c3\u30c8\u304c\u8a2d\u5b9a\u6e08\u307f\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092 \u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044.(\u305d\u3057\u3066\uff0c\u305d\u306e\u7d50\u679c\u3092MoveIt!\u306e\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306b\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3044) MoveIt!\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30a2\u30b7\u30b9\u30bf\u30f3\u30c8 URDF \u3068 SRDF \u4f4e\u30ec\u30d9\u30eb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9 \u77e5\u899a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb IKfast \u30bd\u30eb\u30d0\u30fc Track-IK \u30bd\u30eb\u30d0\u30fc \u8a2d\u5b9a \u904b\u52d5\u5b66\u306e\u8a2d\u5b9a Fake\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc \u30ab\u30b9\u30bf\u30e0\u5236\u7d04\u30b5\u30f3\u30d7\u30e9\u30fc OMPL\u30d7\u30e9\u30f3\u30ca\u30fc CHOMP\u30d7\u30e9\u30f3\u30ca\u30fc STOMP\u30d7\u30e9\u30f3\u30ca\u30fc \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u305d\u306e\u4ed6 \u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af \u30d9\u30f3\u30c1\u30de\u30fc\u30af \u7d50\u5408/\u30e6\u30cb\u30c3\u30c8 \u30c6\u30b9\u30c8","title":"MoveIt!\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"},{"location":"#moveit","text":"Source \u3053\u3053\u306e\u7ffb\u8a33 \u53c2\u8003 material cheet sheet \u3053\u308c\u3089\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u901a\u3057\u3066MoveIt!\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\uff0e\u3061\u306a\u307f\u306b\uff0cMoveIt!\u306f\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3088\uff0e \u3053\u308c\u3089\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\uff0cFranka Emika Panda\u30ed\u30dc\u30c3\u30c8\u3092\u4f8b\u3068\u6307\u5b9a\u4f7f\u7528\u3057\u307e\u3059\uff0e \u3059\u3067\u306bMoveIt!\u306b\u5bfe\u5fdc\u3059\u308b\u7528\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30ed\u30dc\u30c3\u30c8\u3067\u3042\u308c\u3070\uff0c\u7c21\u5358\u306bPanda\u30ed\u30dc\u30c3\u30c8\u3092\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c \u53ef\u80fd\u3067\u3059\uff0e\u30ed\u30dc\u30c3\u30c8\u304c \u3059\u3050\u306b \u5229\u7528\u53ef\u306e\u304b\u3069\u3046\u304b\u306f MoveIt!\u3067\u3059\u3050\u306b\u4f7f\u7528\u53ef\u80fd\u306a \u30ed\u30dc\u30c3\u30c8\u306e\u30ea\u30b9\u30c8 \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e\u3082\u3057\uff0c\u30ea\u30b9\u30c8\u306b\u3042\u306a\u305f\u306e\u304a\u6c17\u306b\u5165\u308a\u306e \u30ed\u30dc\u30c3\u30c8\u304c\u7121\u3044\u5834\u5408\u306b\u306f\uff0c\u3042\u306a\u305f\u81ea\u8eab\u304cMoveIt!\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308c\u3070\uff0c\u3042\u306a\u305f\u306e\u30ed\u30dc\u30c3\u30c8\u3067MoveIt!\u3092 \u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e \u8a73\u3057\u304f\u306f\"\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u3067\u4f7f\u3046\u306b\u306f\"\u306e\u7ae0\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e Note \u3053\u308c\u306fROS Melodic\u30d0\u30fc\u30b8\u30e7\u30f3\u306eMoveIt!\u306e\u548c\u8a33\u3067\u3059\uff0eKinetic\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f Kinetic \u82f1\u8a9e \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e","title":"MoveIt!\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb"},{"location":"#moveitrviz","text":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 MoveIt!\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\uff0eRviz\u3068\u3068\u3082\u306b","title":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 MoveIt!\u3068Rviz"},{"location":"#movegroup-cpythonros-","text":"MoveIt!\u3092\u4f7f\u7528\u3059\u308b\u6700\u3082\u7c21\u5358\u306a\u65b9\u6cd5\u306f move_group_interface \u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3059\uff0e \u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u521d\u5fc3\u8005\u306b\u304a\u3059\u3059\u3081\u3067\u3059\uff0e\u3055\u3089\u306b\uff0c\u3053\u306e\u30af\u30e9\u30b9\u306fMoveIt!\u306e \u591a\u304f\u306e\u6a5f\u80fd\u3078\u7d71\u4e00\u3055\u308c\u305f\u65b9\u6cd5\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e Move Group C++ \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 Move Group Python \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 MoveIt! Commander \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9","title":"MoveGroup - C++\u3068Python\u306eROS\u30e9\u30c3\u30d1\u30fc -"},{"location":"#cmoveit","text":"MoveIt!\u3092\u5229\u7528\u3057\u3066\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u306fMoveIt!\u306eC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092 \u5229\u7528\u3057\u3066\u4e0b\u3055\u3044\uff0e\u3055\u3089\u306b\uff0c\u76f4\u63a5\u7684\u306bC++ API\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u591a\u304f\u306eROS\u30b5\u30fc\u30d3\u30b9/\u30a2\u30af\u30b7\u30e7\u30f3\u5c64\u3092 \u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u306e\u3067\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5927\u5e45\u306b\u5411\u4e0a\u3057\u307e\u3059\uff0e Robot Model \u3068 Robot State \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3(Planning Scene) \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3(ROS API) \u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0API \u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3 \u885d\u7a81\u306e\u8868\u793a \u6642\u9593\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a \u3086\u308b\u304f\u7d44\u307f\u5408\u308f\u3055\u3063\u305f\u62d8\u675f\u3068\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0 \u30d4\u30c3\u30af\uff06\u30d7\u30ec\u30a4\u30b9","title":"C++\u3092\u5229\u7528\u3057\u3066\u76f4\u63a5\u7684\u306bMoveIt!\u3092\u4f7f\u3046"},{"location":"#_1","text":"\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306eMoveIt!\u306e\u8a2d\u5b9a\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\uff0c \u3053\u306e\u30ea\u30b9\u30c8 \u3067 \u305d\u306e\u30ed\u30dc\u30c3\u30c8\u304c\u8a2d\u5b9a\u6e08\u307f\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092 \u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044.(\u305d\u3057\u3066\uff0c\u305d\u306e\u7d50\u679c\u3092MoveIt!\u306e\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306b\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3044) MoveIt!\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30a2\u30b7\u30b9\u30bf\u30f3\u30c8 URDF \u3068 SRDF \u4f4e\u30ec\u30d9\u30eb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9 \u77e5\u899a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb IKfast \u30bd\u30eb\u30d0\u30fc Track-IK \u30bd\u30eb\u30d0\u30fc","title":"\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u3067\u4f7f\u3046\u306b\u306f"},{"location":"#_2","text":"\u904b\u52d5\u5b66\u306e\u8a2d\u5b9a Fake\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc \u30ab\u30b9\u30bf\u30e0\u5236\u7d04\u30b5\u30f3\u30d7\u30e9\u30fc OMPL\u30d7\u30e9\u30f3\u30ca\u30fc CHOMP\u30d7\u30e9\u30f3\u30ca\u30fc STOMP\u30d7\u30e9\u30f3\u30ca\u30fc \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb","title":"\u8a2d\u5b9a"},{"location":"#_3","text":"\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af \u30d9\u30f3\u30c1\u30de\u30fc\u30af \u7d50\u5408/\u30e6\u30cb\u30c3\u30c8 \u30c6\u30b9\u30c8","title":"\u305d\u306e\u4ed6"},{"location":"1/","text":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! Note \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f ROS Melodic \u30d0\u30fc\u30b8\u30e7\u30f3\u306eMoveIt!\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3088\uff0e ROS\u3068Catkin\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb ROS Melodic\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u308c\u306f\u3068\u3066\u3082\u30df\u30b9\u3057\u3084\u3059\u3044\u30b9\u30c6\u30c3\u30d7\u3067\u3059\uff0e \u6ce8\u610f\u6df1\u304f\u9032\u3081\u307e\u3057\u3087\u3046\uff0e\u3082\u3057\uff0c\u3042\u306a\u305f\u304c\u6b21\u304b\u3089\u884c\u3046\u3044\u304f\u3064\u304b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u304a\u3044\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3063\u305f\u3089 \u3053\u306e\u7ae0\u306b\u7acb\u3061\u8fd4\u3063\u3066\uff0c\u6b63\u3057\u304fROS\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e ROS\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\uff0c\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u5fd8\u308c\u305a\u306b\u3057\u307e\u3057\u3087\u3046\uff0e rosdep sudo apt update sudo apt upgrade sudo apt dist-upgrade ROS\u306e\u30d3\u30eb\u30c9\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b catkin \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo apt install ros-melodic-catkin python-catkin-tools MoveIt!\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u6700\u3082\u7c21\u5358\u306aMoveIt!\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u4e8b\u524d\u306b\u30d3\u30eb\u30c9\u3057\u3066\u3042\u308b\u3082\u306e\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\uff0e sudo apt install ros-melodic-moveit \u7df4\u7fd2\u7528\u306ecatkin\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308d\u3046 catkin\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u306a\u306e\u3067\u3057\u307e\u3057\u3087\u3046\uff0e mkdir -p ~/catkin_ws/src \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u52c9\u5f37\u3059\u308b\u305f\u3081\u306b\uff0c ROBOT_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fPanda arm(Franka Emika\u88fd)\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8 \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092 \u898b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3088\uff0e \u3042\u306a\u305f\u306ecatkin_ws\u306e\u4e2d\u306b\uff0c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3060\u3051\u3067\u306a\u304f panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3082 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\uff0e cd ~/catkin_ws/src git clone https://github.com/ros-planning/moveit_tutorials.git -b master git clone https://github.com/ros-planning/panda_moveit_config.git -b melodic-devel Note \u4eca\u56de\u306f\u4e8b\u524d\u306b\u4f5c\u6210\u3055\u308c\u305f panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\uff0c \u5f8c\u3005\uff0c\u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u52c9\u5f37\u3057\u307e\u3059\u306e\u3067\u3054\u5b89\u5fc3\u304f\u3060\u3055\u3044\u306d\uff0e catkin workspace\u3092\u30d3\u30eb\u30c9\u3059\u308b \u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u8db3\u308a\u3066\u3044\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e cd ~/catkin_ws/src rosdep install -y --from-paths . --ignore-src --rosdistro melodic \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u306fcatkin workspace\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\uff0e cd ~/catkin_ws/src catkin config --extend /opt/ros/${ROS_DISTRO} --cmake-args -DCMAKE_BUILD_TYPE=Release catkin build catkin build \u3067\u4f5c\u6210\u3055\u308c\u305f\u8a2d\u5b9a\u3092\u53cd\u6620\u3057\u307e\u3059\uff0e \u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3053\u3068\u3067, \u4eca,\u30d3\u30eb\u30c9\u3055\u308c\u305f\u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5bfe\u3057\u3066tab\u88dc\u5b8c\u306a\u3069\u304c\u52b9\u304f\u7528\u306b\u306a\u308a\u307e\u3059\uff0e \u3084\u3063\u3066\u3082\u3044\u3044\u3057\uff0c\u3084\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u3067\u3059\u304c \u4e0a\u8ff0\u306e\u30b3\u30de\u30f3\u30c9\u3092 .bashrc \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3093\u3067\u304a\u304f\u3068\uff0c\u4e0a\u8ff0\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30d3\u30eb\u30c9\u306e\u305f\u3073\u306b \u6253\u3061\u76f4\u3059\u5fc5\u8981\u304c\u306a\u304f\u3066\u4fbf\u5229\u3067\u3059\uff0e\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3067\u304d\u307e\u3059\uff0e echo 'source ~/catkin_ws/devel/setup.bash' >> ~/.bashrc Note \u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u3078\u66f8\u304d\u8fbc\u3080\u3053\u3068\u306f\u5f37\u5236\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057, \u8907\u6570\u306ecatkin_ws\u3092\u540c\u6642\u306b\u4f7f\u7528\u3059\u308b\u3088\u3046\u306a\u5f37\u8005\u306f\uff0c\u3053\u306e\u5de5\u7a0b\u3092\u3057\u3070\u3057\u3070\u98db\u3070\u3057\u307e\u3059\u304c\uff0c \u4eca\u56de\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306a\u306e\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u81ea\u52d5\u7684\u306b\u66f8\u304d\u8fbc\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e","title":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046!"},{"location":"1/#_1","text":"Note \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f ROS Melodic \u30d0\u30fc\u30b8\u30e7\u30f3\u306eMoveIt!\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3088\uff0e","title":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046!"},{"location":"1/#roscatkin","text":"ROS Melodic\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u308c\u306f\u3068\u3066\u3082\u30df\u30b9\u3057\u3084\u3059\u3044\u30b9\u30c6\u30c3\u30d7\u3067\u3059\uff0e \u6ce8\u610f\u6df1\u304f\u9032\u3081\u307e\u3057\u3087\u3046\uff0e\u3082\u3057\uff0c\u3042\u306a\u305f\u304c\u6b21\u304b\u3089\u884c\u3046\u3044\u304f\u3064\u304b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u304a\u3044\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3063\u305f\u3089 \u3053\u306e\u7ae0\u306b\u7acb\u3061\u8fd4\u3063\u3066\uff0c\u6b63\u3057\u304fROS\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e ROS\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u305f\u3089\uff0c\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u5fd8\u308c\u305a\u306b\u3057\u307e\u3057\u3087\u3046\uff0e rosdep sudo apt update sudo apt upgrade sudo apt dist-upgrade ROS\u306e\u30d3\u30eb\u30c9\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b catkin \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\uff0e sudo apt install ros-melodic-catkin python-catkin-tools","title":"ROS\u3068Catkin\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"1/#moveit","text":"\u6700\u3082\u7c21\u5358\u306aMoveIt!\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u4e8b\u524d\u306b\u30d3\u30eb\u30c9\u3057\u3066\u3042\u308b\u3082\u306e\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\uff0e sudo apt install ros-melodic-moveit","title":"MoveIt!\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"1/#catkin","text":"catkin\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u306a\u306e\u3067\u3057\u307e\u3057\u3087\u3046\uff0e mkdir -p ~/catkin_ws/src","title":"\u7df4\u7fd2\u7528\u306ecatkin\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308d\u3046"},{"location":"1/#_2","text":"\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u52c9\u5f37\u3059\u308b\u305f\u3081\u306b\uff0c ROBOT_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fPanda arm(Franka Emika\u88fd)\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8 \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092 \u898b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3088\uff0e \u3042\u306a\u305f\u306ecatkin_ws\u306e\u4e2d\u306b\uff0c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3060\u3051\u3067\u306a\u304f panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3082 \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\uff0e cd ~/catkin_ws/src git clone https://github.com/ros-planning/moveit_tutorials.git -b master git clone https://github.com/ros-planning/panda_moveit_config.git -b melodic-devel Note \u4eca\u56de\u306f\u4e8b\u524d\u306b\u4f5c\u6210\u3055\u308c\u305f panda_moveit_config \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\uff0c \u5f8c\u3005\uff0c\u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u52c9\u5f37\u3057\u307e\u3059\u306e\u3067\u3054\u5b89\u5fc3\u304f\u3060\u3055\u3044\u306d\uff0e","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9"},{"location":"1/#catkin-workspace","text":"\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u8db3\u308a\u3066\u3044\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e cd ~/catkin_ws/src rosdep install -y --from-paths . --ignore-src --rosdistro melodic \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u306fcatkin workspace\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\uff0e cd ~/catkin_ws/src catkin config --extend /opt/ros/${ROS_DISTRO} --cmake-args -DCMAKE_BUILD_TYPE=Release catkin build catkin build \u3067\u4f5c\u6210\u3055\u308c\u305f\u8a2d\u5b9a\u3092\u53cd\u6620\u3057\u307e\u3059\uff0e \u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3053\u3068\u3067, \u4eca,\u30d3\u30eb\u30c9\u3055\u308c\u305f\u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5bfe\u3057\u3066tab\u88dc\u5b8c\u306a\u3069\u304c\u52b9\u304f\u7528\u306b\u306a\u308a\u307e\u3059\uff0e \u3084\u3063\u3066\u3082\u3044\u3044\u3057\uff0c\u3084\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u3067\u3059\u304c \u4e0a\u8ff0\u306e\u30b3\u30de\u30f3\u30c9\u3092 .bashrc \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3093\u3067\u304a\u304f\u3068\uff0c\u4e0a\u8ff0\u306e\u30b3\u30de\u30f3\u30c9\u3092\u30d3\u30eb\u30c9\u306e\u305f\u3073\u306b \u6253\u3061\u76f4\u3059\u5fc5\u8981\u304c\u306a\u304f\u3066\u4fbf\u5229\u3067\u3059\uff0e\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3067\u304d\u307e\u3059\uff0e echo 'source ~/catkin_ws/devel/setup.bash' >> ~/.bashrc Note \u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u3078\u66f8\u304d\u8fbc\u3080\u3053\u3068\u306f\u5f37\u5236\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057, \u8907\u6570\u306ecatkin_ws\u3092\u540c\u6642\u306b\u4f7f\u7528\u3059\u308b\u3088\u3046\u306a\u5f37\u8005\u306f\uff0c\u3053\u306e\u5de5\u7a0b\u3092\u3057\u3070\u3057\u3070\u98db\u3070\u3057\u307e\u3059\u304c\uff0c \u4eca\u56de\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306a\u306e\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u81ea\u52d5\u7684\u306b\u66f8\u304d\u8fbc\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e","title":"catkin workspace\u3092\u30d3\u30eb\u30c9\u3059\u308b"},{"location":"2/","text":"MoveIt!\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\uff0eRviz\u3068\u3068\u3082\u306b MoveIt!\u306e\u4f7f\u7528\u3092\u59cb\u3081\u308b\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u306fRviz\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff0e Rviz\u306fROS\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u3067\u3042\u308a\uff0c\u3068\u3066\u3082\u4fbf\u5229\u306a\u30ed\u30dc\u30c3\u30c8\u306e\u30c7\u30d0\u30c3\u30b0\u30c4\u30fc\u30eb\u3067\u3082\u3042\u308a\u307e\u3059\uff0e MoveIt!\u306eRviz\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4eee\u60f3\u7684\u306a\u7a7a\u9593(scene)\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u3042\u306a\u305f\u306f\u305d\u3053\u3067\u30b9\u30bf\u30fc\u30c8\u3084\u30b4\u30fc\u30eb\u3092 \u8a2d\u5b9a\u3057\u305f\u308a\uff0c\u69d8\u3005\u306a\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u3092\u8a66\u3057\u305f\u308a\uff0c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u59cb\u3081\u3088\u3046 \u3082\u3057\u3042\u306a\u305f\u304c\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u3066\u3053\u3053\u306b\u6765\u3066\u3057\u307e\u3063\u305f \u3042\u308f\u3066\u3093\u307c\u3046\u3055\u3093\u3067\u3042\u308c\u3070\uff0c\u623b\u3063\u3066\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u304b\u3089\u59cb\u3081\u3066\u304f\u3060\u3055\u3044\uff0e \u30b9\u30c6\u30c3\u30d7\uff11\uff1a\u30c7\u30e2\u3092 launch \u3057\uff0c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u3092\u3059\u308b Note \u672c\u6765\u3067\u3042\u308c\u3070\uff0c launch \u306f\u5b9f\u884c\u3059\u308b\u3068\u3067\u3082\u8a33\u3059\u3079\u304d\u3067\u3059\u304c\uff0c roslaunch \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3082 \u3042\u308b\u306e\u3067\uff0c launch \u306f roslaunch \u3092\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u3092\u8fbc\u3081\u3066\u308f\u3056\u3068\u82f1\u8a9e\u306e\u307e\u307e\u306b\u3057\u3066\u3042\u308a\u307e\u3059 \u30c7\u30e2\u3092 launch \u3059\u308b roslaunch panda_moveit_config demo.launch rviz_tutorial:=true \u3082\u3057\uff0c\u3053\u308c\u3092\u3059\u308b\u306e\u304b\u521d\u3081\u3066\u3067\u3042\u308c\u3070\u7a7a\u306e\u30ef\u30fc\u30eb\u30c9\u304cRviz\u306b\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e \u7a7a\u306e\u30ef\u30fc\u30eb\u30c9\u304cRviz\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\uff0e Rviz\u4e0a\u306eDisplay\u30bf\u30d6\u3067 Add \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e moveit_ros_visualizer\u30d5\u30a9\u30eb\u30c0\u304b\u3089MotionPlanning\u3092\u9078\u629e\u3057Ok\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Rviz\u4e0a\u3067Panda\u30ed\u30dc\u30c3\u30c8\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\uff0e \u4e00\u65e6\uff0cMotionPlanning\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3057\u307e\u3048\u3070\uff0c\u305d\u308c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u201dGlobal\u3000Options\"\u30bf\u30d6\u306e\u4e2d\u306b\u3042\u308b\"Display\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e2d\u306e Fixed Frame \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 /panda_link0 \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3053\u308c\u3067\uff0c\u30ed\u30dc\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u3092\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e \"Displays\"\u306e\u4e2d\u306b\u3042\u308b\"MotionPlanning\"\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Robot Description \u30d5\u30a3\u30fc\u30eb\u30c9\u304c robot_description \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planning Scene Topic \u30d5\u30a3\u30fc\u30eb\u30c9\u304c /planning_scene \u306b\u306a\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u304b\u3089\u30c8\u30d4\u30c3\u30af\u30cd\u30fc\u30e0\u3092\u9078\u629e\u3057\uff0c\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planning Request \u306b\u304a\u3044\u3066 Planning Group \u3092 panda_arm \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planned Path \u306b\u304a\u3044\u3066\uff0c Trajectory Topic \u3092 /move_group/display_planned_path \u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e","title":"MoveIt!\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\uff0eRviz\u3068\u3068\u3082\u306b"},{"location":"2/#moveitrviz","text":"MoveIt!\u306e\u4f7f\u7528\u3092\u59cb\u3081\u308b\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u306fRviz\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff0e Rviz\u306fROS\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u30fc\u3067\u3042\u308a\uff0c\u3068\u3066\u3082\u4fbf\u5229\u306a\u30ed\u30dc\u30c3\u30c8\u306e\u30c7\u30d0\u30c3\u30b0\u30c4\u30fc\u30eb\u3067\u3082\u3042\u308a\u307e\u3059\uff0e MoveIt!\u306eRviz\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4eee\u60f3\u7684\u306a\u7a7a\u9593(scene)\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u3042\u306a\u305f\u306f\u305d\u3053\u3067\u30b9\u30bf\u30fc\u30c8\u3084\u30b4\u30fc\u30eb\u3092 \u8a2d\u5b9a\u3057\u305f\u308a\uff0c\u69d8\u3005\u306a\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u3092\u8a66\u3057\u305f\u308a\uff0c\u7d50\u679c\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e","title":"MoveIt!\u306e\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\uff0eRviz\u3068\u3068\u3082\u306b"},{"location":"2/#_1","text":"\u3082\u3057\u3042\u306a\u305f\u304c\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u3092\u30b9\u30ad\u30c3\u30d7\u3057\u3066\u3053\u3053\u306b\u6765\u3066\u3057\u307e\u3063\u305f \u3042\u308f\u3066\u3093\u307c\u3046\u3055\u3093\u3067\u3042\u308c\u3070\uff0c\u623b\u3063\u3066\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u304b\u3089\u59cb\u3081\u3066\u304f\u3060\u3055\u3044\uff0e","title":"\u59cb\u3081\u3088\u3046"},{"location":"2/#1launch","text":"Note \u672c\u6765\u3067\u3042\u308c\u3070\uff0c launch \u306f\u5b9f\u884c\u3059\u308b\u3068\u3067\u3082\u8a33\u3059\u3079\u304d\u3067\u3059\u304c\uff0c roslaunch \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3082 \u3042\u308b\u306e\u3067\uff0c launch \u306f roslaunch \u3092\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u3092\u8fbc\u3081\u3066\u308f\u3056\u3068\u82f1\u8a9e\u306e\u307e\u307e\u306b\u3057\u3066\u3042\u308a\u307e\u3059 \u30c7\u30e2\u3092 launch \u3059\u308b roslaunch panda_moveit_config demo.launch rviz_tutorial:=true \u3082\u3057\uff0c\u3053\u308c\u3092\u3059\u308b\u306e\u304b\u521d\u3081\u3066\u3067\u3042\u308c\u3070\u7a7a\u306e\u30ef\u30fc\u30eb\u30c9\u304cRviz\u306b\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e \u7a7a\u306e\u30ef\u30fc\u30eb\u30c9\u304cRviz\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\uff0e Rviz\u4e0a\u306eDisplay\u30bf\u30d6\u3067 Add \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e moveit_ros_visualizer\u30d5\u30a9\u30eb\u30c0\u304b\u3089MotionPlanning\u3092\u9078\u629e\u3057Ok\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Rviz\u4e0a\u3067Panda\u30ed\u30dc\u30c3\u30c8\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\uff0e \u4e00\u65e6\uff0cMotionPlanning\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3057\u307e\u3048\u3070\uff0c\u305d\u308c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u201dGlobal\u3000Options\"\u30bf\u30d6\u306e\u4e2d\u306b\u3042\u308b\"Display\"\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e2d\u306e Fixed Frame \u30d5\u30a3\u30fc\u30eb\u30c9\u3092 /panda_link0 \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3053\u308c\u3067\uff0c\u30ed\u30dc\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u3092\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e \"Displays\"\u306e\u4e2d\u306b\u3042\u308b\"MotionPlanning\"\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Robot Description \u30d5\u30a3\u30fc\u30eb\u30c9\u304c robot_description \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planning Scene Topic \u30d5\u30a3\u30fc\u30eb\u30c9\u304c /planning_scene \u306b\u306a\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u304b\u3089\u30c8\u30d4\u30c3\u30af\u30cd\u30fc\u30e0\u3092\u9078\u629e\u3057\uff0c\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planning Request \u306b\u304a\u3044\u3066 Planning Group \u3092 panda_arm \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e Planned Path \u306b\u304a\u3044\u3066\uff0c Trajectory Topic \u3092 /move_group/display_planned_path \u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e","title":"\u30b9\u30c6\u30c3\u30d7\uff11\uff1a\u30c7\u30e2\u3092launch\u3057\uff0c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u3092\u3059\u308b"},{"location":"3/","text":"Move Group C++ \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 MoveIt!\u306b\u304a\u3044\u3066\uff0c\u6700\u3082\u7c21\u5358\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f MoveGroupInterface \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\uff0e\u305d\u306e\u30af\u30e9\u30b9\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u5b9f\u884c\u3057\u305d\u3046\u306a\u6b86\u3069\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u7279\u306b\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u3084\u30b4\u30fc\u30eb\u306e\u30dd\u30fc\u30ba\u3092\u8a2d\u5b9a\u3057\u305f\u308a\uff0c\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u3092\u8a08\u753b\u3057\u305f\u308a\uff0c \u30ed\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3057\u305f\u308a\uff0c\u74b0\u5883\u4e2d\u306b\u7269\u4f53\u3092\u8a2d\u7f6e/\u6392\u9664\u3057\u305f\u308a, \u30ed\u30dc\u30c3\u30c8\u306b\u7269\u4f53\u3092\u8a2d\u7f6e/\u6392\u9664\u3057\u305f\u308a\u3059\u308b \u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fROS\u306e\u30c8\u30d4\u30c3\u30af\u3084\u30b5\u30fc\u30d3\u30b9\uff0c\u307e\u305f\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u901a\u3057\u3066 MoveGroup Node \u3068\u901a\u4fe1\u3057\u307e\u3059\uff0e move group interface \u30af\u30e9\u30b9\u3067\u3069\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u304b\u3092\u624b\u3063\u53d6\u308a\u65e9\u304f\u77e5\u308b\u305f\u3081\u306b\u306f\uff0c YouTube video demo \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e \u306f\u3058\u3081\u306b \u304a\u304a\uff0c\u52c7\u8005\u3088\uff0e \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u3092\u98db\u3070\u3057\u3066\u3057\u307e\u3046\u3068\u306f\u60c5\u3051\u306a\u3044\uff0e \u623b\u3063\u3066\u3084\u308a\u76f4\u3059\u306e\u3058\u3083\uff0e \u30b3\u30fc\u30c9\u306e\u5b9f\u884c \uff12\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e\uff11\u3064\u76ee\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u306fRviz\u3092\u5b9f\u884c\u3057\uff0c\u305d\u3057\u3066\u30ed\u30fc\u30c9\u304c \u6e08\u3080\u306e\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\uff0e roslaunch panda_moveit_config demo.launch \uff12\u3064\u76ee\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067launch\u30d5\u30a1\u30a4\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304f\u3060\u3055\u3044\uff0e roslaucn moveit_tutorials move_group_interface_tutorial.launch Note \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u30c7\u30e2\u3092\u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u3059\u3059\u3081\u308b\u305f\u3081\u306b\uff0c RvizVisualToolsGui \u30d1\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\u30d1\u30cd\u30eb\u3092Rviz\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u306f Visualization Turorial \u306eRviz Viaual Tools\u306e\u7ae0\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e \u3057\u3070\u3089\u304f\u3057\u305f\u5f8c\uff0cRviz\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304b\u308c\uff0c\u3053\u306e\u30da\u30fc\u30b8\u306e\u6700\u521d\u306b\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u304c\u898b\u308c\u308b\u306f\u305a\u3067\u3059\uff0e \u3053\u308c\u304b\u3089\u3044\u304f\u3064\u304b move_group_interface \u30af\u30e9\u30b9\u306e\u30c7\u30e2\u3092\u4f53\u9a13\u3057\u3066\u3044\u304d\u307e\u3059\u304c\uff0c\u30c7\u30e2\u3092\u3059\u3059\u3081\u308b\u305f\u3081\u306b\u306f \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e0b\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b RvizVisualToolsGui \u306e Next \u30dc\u30bf\u30f3\u3092\u62bc\u3059\u304b\uff0c\u307e\u305f\u306f\uff0c \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e0a\u90e8\u306e Tools \u30d1\u30cd\u30eb\u306b\u3042\u308b Key Tool \u3092\u9078\u629e\u3057\uff0c\u3042\u306a\u305f\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u306e N \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3082\u3061\u308d\u3093\uff0cRviz\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u72b6\u614b\u3067\uff0e \u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c \u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c\u306f\u5148\u7a0b\uff0c YouTube video demo \u3067\u78ba\u8a8d\u3057\u305f\u3068\u304a\u308a\u3067\u3059\u304c\uff0c \u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\uff0cRviz\u4e0a\u3067\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u884c\u308f\u308c\u308b\u3053\u3068\u3067\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u306e\u59ff\u52e2\u3092\u524d\u65b9\u306b\u52d5\u304b\u3059 \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u306e\u95a2\u7bc0\u3092\u52d5\u304b\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u3092\u5f8c\u65b9\u306e\u65b0\u3057\u3044\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u30b4\u30fc\u30eb\u59ff\u52e2\u306b\u52d5\u304b\u3059 \u30ed\u30dc\u30c3\u30c8\u306e\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u304c\u6307\u5b9a\u3055\u308c\u305f\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u30d1\u30b9\u3092\u306a\u305e\u308b\uff08\u4e09\u89d2\u5f62\uff09 \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u53f3\u5074\u306b\u8a2d\u7f6e\u3059\u308b\uff0e \u30ed\u30dc\u30c3\u30c8\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u907f\u3051\u306a\u304c\u3089\uff0c\u6307\u5b9a\u3055\u308c\u305f\u59ff\u52e2\u306b\u79fb\u52d5\u3059\u308b\uff0e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30ed\u30dc\u30c3\u30c8\u306e\u624b\u9996\u306b\u53d6\u308a\u4ed8\u3051\u3089\u308c\u308b\uff0e(\u8272\u304c\u7d2b\u30fb\u30aa\u30ec\u30f3\u30b8\u30fb\u7dd1\u306b\u5909\u308f\u308b\uff09 \u74b0\u5883\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d6\u308a\u9664\u304b\u308c\u308b \u5168\u4f53\u306e\u30b3\u30fc\u30c9 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306f MoveIt! GitHub Project \u304b\u3089\u898b\u3089\u308c\u307e\u3059\uff0e\u3064\u304e\u306b\uff0c\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5206\u5272\u3057\u3066\u6a5f\u80fd\u3092\u8aac\u660e\u3057\u307e\u3059\uff0e \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 \"planning group\"\u3068\u547c\u3070\u308c\u308b\u30b8\u30e7\u30a4\u30f3\u30c8\uff08\u95a2\u7bc0\uff09\u306e\u96c6\u5408\u3092MoveIt!\u306f\u64cd\u4f5c\u3057, \u305d\u308c\u3089(\u95a2\u7bc0\u306b\u95a2\u3059\u308b\u60c5\u5831)\u3092 JointModelGroup \u3068\u547c\u3070\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3057\u307e\u3059\uff0e MoveIt!\u306e\u8aac\u660e\u6587\u4e2d\u3067\u306f\uff0c\"planning group\"\u3068\"joint model group\"\u306f\u307b\u307c\u540c\u3058\u3088\u3046\u306a\u610f\u5473\u3092\u6301\u3063\u3066 \u4f7f\u308f\u308c\u307e\u3059\uff0e static const std :: string PLANNING_GROUP = \"panda_arm\" ; MoveGroupInterface \u30af\u30e9\u30b9\u306f\u3042\u306a\u305f\u304c\u4f7f\u7528\u3057\u305f\u3044planning group\u306e\u540d\u524d\u3092\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e moveit :: planning_interface :: MoveGroupInterface move_group ( PLANNING_GROUP ); \u6211\u3005\u306f PlanningSceneInterface \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u885d\u7a81\u7269\u4f53\u3092\u201d\u4eee\u60f3\u7a7a\u9593\u201d\u306b\u8a2d\u7f6e\u3057\u305f\u308a\u53d6\u308a\u9664\u3044\u305f\u308a\u3067\u304d\u307e\u3059\uff0e moveit :: planning_interface :: PlanningSceneInterface planning_scene_interface ; \u751f\u30dd\u30a4\u30f3\u30bf\u30fc\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b plannning group \u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\uff0e const robot_state :: JointModelGroup * joint_model_group = move_group . getCurrentState () -> getJointModelGroup ( PLANNING_GROUP ); Note \u751f\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u4f7f\u308f\u305a\u306b\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff0e \u8868\u793a MoveitVisualTools\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff0c\u30ed\u30dc\u30c3\u30c8\uff0c\u305d\u3057\u3066\u8ecc\u8de1\u3092Rviz\u4e0a\u3067\u8868\u793a\u3055\u305b\u308b\u3060\u3051\u3067\u306a\u304f \u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u30c7\u30d0\u30c3\u30b0\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e namespace rvt = rviz_visual_tools ; moveit_visual_tools :: MoveItVisualTools visual_tools ( \"panda_link0\" ); visual_tools . deleteAllMarkers (); remote control \u306fRviz\u306e\u30dc\u30bf\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u308b\u3053\u3068\u304c \u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\uff0e visual_tools . loadRemoteControl (); Rviz\u306f\u305f\u304f\u3055\u3093\u306e\u7a2e\u985e\u306e\u30de\u30fc\u30ab\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\u3053\u306e\u30c7\u30e2\u3067\u306f\uff0c\u30c6\u30ad\u30b9\u30c8\uff0c\u5186\u67f1\uff0c\u305d\u3057\u3066\u7403\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e Eigen :: Isometry3d text_pose = Eigen :: Isometry3d :: Identity (); text_pose . translation (). z () = 1.75 ; visual_tools . publishText ( text_pose , \"MoveGroupInterface Demo\" , rvt :: WHITE , rvt :: XLARGE ); \u307e\u3068\u3081\u3066\u30c8\u30d4\u30c3\u30af\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u306f\u5927\u91cf\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u306bRviz\u306b\u9001\u3089\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u91cf\u3092\u6e1b\u3089\u305b\u307e\u3059\uff0e visual_tools . trigger (); \u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b \u6211\u3005\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u5ea7\u6a19\u7cfb\u306e\u540d\u524d\u3092\u8868\u793a\u3057\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Planning frame: %s\" , move_group . getPlanningFrame (). c_str ()); \u6211\u3005\u306f\uff0c\u3053\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3057\u3066\u3044\u308b\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u3000\u30ea\u30f3\u30af\u306e\u540d\u524d\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"End effector link: %s\" , move_group . getEndEffectorLink (). c_str ()); \u6211\u3005\u306f\uff0c\u3053\u306e\u30ed\u30dc\u30c3\u30c8\u306b\u5b58\u5728\u3059\u308b\u3059\u3079\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Available Planning Groups:\" ); std :: copy ( move_group . getJointModelGroupNames (). begin (), move_group . getJointModelGroupNames (). end (), std :: ostream_iterator < std :: string > ( std :: cout , \", \" )); \u30c7\u30e2\u306e\u958b\u59cb \u6211\u3005\u306f\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u3092\u6240\u671b\u306e\u59ff\u52e2\u306b\u3059\u308b\u305f\u3081\u306e\uff0c\u8ecc\u9053\u8a08\u753b\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e geometry_msgs :: Pose target_pose1 ; target_pose1 . orientation . w = 1.0 ; target_pose1 . position . x = 0.28 ; target_pose1 . position . y = - 0.2 ; target_pose1 . position . z = 0.5 ; move_group . setPoseTarget ( target_pose1 ); \u3044\u307e\uff0c\u8ecc\u9053\u8a08\u753b\u3068\u8868\u793a\u306e\u305f\u3081\u306b\u30d7\u30e9\u30f3\u30ca\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e \u6211\u3005\u306f\u8a08\u753b\u3059\u308b\u3060\u3051\u3060\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e move_group \u306b\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u3092 \u547d\u4ee4\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e moveit :: planning_interface :: MoveGroupInterface :: Plan my_plan ; bool success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 1 (pose goal) %s\" , success ? \"\" : \"FAILED\" ); \u8ecc\u9053\u8a08\u753b\u306e\u8868\u793a Rviz\u4e0a\u3067\u76f4\u7dda\u30de\u30fc\u30ab\u3092\u5229\u7528\u3057\u3066\u8ecc\u9053\u8a08\u753b\u3092\u8868\u793a\u3055\u305b\u3089\u308c\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 1 as trajectory line\" ); visual_tools . publishAxisLabeled ( target_pose1 , \"pose1\" ); visual_tools . publishText ( text_pose , \"Pose Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" ); \u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306b\u79fb\u52d5\u3055\u305b\u308b \u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u306f move() \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u4ee5\u5916\u306f\uff0c\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u4f3c\u3066\u3044\u307e\u3059\uff0e \u4ee5\u524d\u306b\u8a2d\u5b9a\u3057\u305f\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306f\u4f9d\u7136\u3068\u3057\u3066\u6709\u52b9\u3067\uff0c\u305d\u306e\u305f\u3081\u306b\uff0c\u30ed\u30dc\u30c3\u30c8\u306f\u305d\u306e\u30b4\u30fc\u30eb\u59ff\u52e2\u306b\u79fb\u52d5\u3057\u3088\u3046\u3068\u8a66\u307f\u307e\u3059\uff0e \u4eca\u56de\uff0c\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f move() \u95a2\u6570\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\uff0e\u306a\u305c\u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u306f\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u95a2\u6570\u3067\u3042\u308a\uff0c\u6709\u52b9\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9 \u3068\u8ecc\u9053\u3092\u5b9f\u884c\u304c\u6210\u529f\u3057\u305f\u3068\u3044\u3046\u53cd\u5fdc\u304c\u5fc5\u8981\u3060\u304b\u3089\u3067\u3059\uff0e /* Uncomment below line when working with a real robot */ /* move_group.move(); */ Note \u8981\u306f\uff0c move() \u95a2\u6570\u306f\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u3068PC\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\uff0c\u6709\u52b9\u3067\u3042\u308a\uff0c\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u304c \u8ecc\u9053\u8a08\u753b\u3092\u5b9f\u884c\u3057\u307e\u3059\u304c\uff0cRviz\u3092\u4f7f\u7528\u3057\u3066\u4eee\u60f3\u7684\u306a\u74b0\u5883\u4e0b\u3067\u306f\u5229\u7528\u3059\u308b\u3068\u30c7\u30e2\u304c\u9032\u307e\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046 \u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e \u95a2\u7bc0\u7a7a\u9593\u5185\u3067\u306e\u30b4\u30fc\u30eb\u306b\u5bfe\u3059\u308b\u8ecc\u9053\u8a08\u753b Note \u95a2\u7bc0\u7a7a\u9593\u3068\u306f\uff0c\uff13\u6b21\u5143\u7a7a\u9593\u306b\u5bfe\u3057\u3066\u4f7f\u308f\u308c\u308b\u8a00\u8449\u3067\uff0c\u7c21\u5358\u306b\u8a00\u3046\u3068\uff0c{ $\\theta$ } \u95a2\u7bc0\u7a7a\u9593\u5185\u3067\u306e\u30b4\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\uff0c\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u3053\u308c\u306f\u4e0a\u3067\u8a2d\u5b9a\u3057\u305f\u59ff\u52e2\u306e\u76ee\u6a19\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059. \u59cb\u3081\u308b\u306b\u5f53\u305f\u3063\u3066\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff0e RobotState \u306f \u73fe\u5728\u306e\u4f4d\u7f6e\u30fb\u901f\u5ea6\u30fb\u52a0\u901f\u5ea6\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\uff0e moveit :: core :: RobotStatePtr current_state = move_group . getCurrentState (); \u6b21\u306b\uff0c\u73fe\u5728\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b0\u30eb\u30fc\u30d7\u306e\u73fe\u5728\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3092\u6c42\u3081\u307e\u3057\u3087\u3046\uff0e std :: vector < double > joint_group_positions ; current_state -> copyJointGroupPositions ( joint_model_group , joint_group_positions ); \u4e00\u3064\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3092\u66f4\u65b0\u3057\uff0c\u95a2\u7bc0\u7a7a\u9593\u5185\u306e\u65b0\u305f\u306a\u30b4\u30fc\u30eb\u3078\u8ecc\u9053\u8a08\u753b\u3092\u4f5c\u6210\u3057\uff0c\u305d\u306e\u8ecc\u9053\u8a08\u753b\u3092 \u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e joint_group_positions [ 0 ] = - 1.0 ; // radians move_group . setJointValueTarget ( joint_group_positions ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 2 (joint space goal) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u307e\u3059\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Joint Space Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" ); \u5236\u7d04\u304c\u3042\u308b\u5834\u5408\u306e\u8ecc\u9053\u8a08\u753b Note \u8ecc\u9053\u4e0a\u306e\u5236\u7d04 \u3084 \u5236\u7d04 \u306fPath Constraints\u3092\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u306e\u30ea\u30f3\u30af\u306b\u5bfe\u3057\u3066\u7c21\u5358\u306b\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e \u65e9\u901f\uff0c\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\uff0c\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\uff0e \u3067\u306f\uff0c\u307e\u305a\uff0c\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e moveit_msgs :: OrientationConstraint ocm ; ocm . link_name = \"panda_link7\" ; ocm . header . frame_id = \"panda_link0\" ; ocm . orientation . w = 1.0 ; ocm . absolute_x_axis_tolerance = 0.1 ; ocm . absolute_y_axis_tolerance = 0.1 ; ocm . absolute_z_axis_tolerance = 0.1 ; ocm . weight = 1.0 ; \u6b21\u306b\uff0c\u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\uff0e moveit_msgs :: Constraints test_constraints ; test_constraints . orientation_constraints . push_back ( ocm ); move_group . setPathConstraints ( test_constraints ); \u6211\u3005\u306f\uff0c\u4ee5\u524d\u306b\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3057\u305f\u30b4\u30fc\u30eb\u3092\u518d\u5229\u7528\u3057\u307e\u3059\uff0e \u3053\u308c\u306f\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u304c\u3059\u3067\u306b\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u306e\u307f \u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u306e\u305f\u3081\uff0c\u6211\u3005\u306f\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306b\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e robot_state :: RobotState start_state ( * move_group . getCurrentState ()); geometry_msgs :: Pose start_pose2 ; start_pose2 . orientation . w = 1.0 ; start_pose2 . position . x = 0.55 ; start_pose2 . position . y = - 0.05 ; start_pose2 . position . z = 0.8 ; start_state . setFromIK ( joint_model_group , start_pose2 ); move_group . setStartState ( start_state ); \u305d\u308c\u3067\u306f\uff0c\u8a2d\u5b9a\u3057\u305f\u3070\u304b\u308a\u306e\u65b0\u3057\u3044\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u304b\u3089\u3088\u308a\u65e9\u3044\u30b4\u30fc\u30eb\u59ff\u52e2\u3078\u306e\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e move_group . setPoseTarget ( target_pose1 ); \u5236\u7d04\u304c\u3042\u308b\u72b6\u614b\u3067\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\uff0c\u306a\u3057\u306e\u72b6\u614b\u3068\u6bd4\u3079\u3066\u9045\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e \u306a\u305c\u306a\u3089\uff0c\u5236\u7d04\u304c\u3042\u308b\u5834\u5408\u306f\uff0c\u3059\u3079\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306b\u9006\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\uff15\u79d2\u304b\u3089\u5341\u5206\u306b\u8a08\u7b97\u3057\u3066\u89e3\u3092\u767a\u898b\u3067\u304d\u308b\u3088\u3046\u306b\u8a08\u7b97\u6642\u9593\u3092\u5897\u3084\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e move_group . setPlanningTime ( 10.0 ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 3 (constraints) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishAxisLabeled ( start_pose2 , \"start\" ); visual_tools . publishAxisLabeled ( target_pose1 , \"goal\" ); visual_tools . publishText ( text_pose , \"Constrained Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"next step\" ); \u3082\u3057\uff0c\u3046\u307e\u304f\u884c\u3063\u305f\u3089\u5236\u7d04\u3092\u6d88\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e move_group . clearPathConstraints (); \u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053 \u3082\u3061\u308d\u3093\uff0c\u3042\u306a\u305f\u306f\uff0c\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u304c\u901a\u3063\u3066\u3044\u304f\u30a6\u30a7\u30a4\u30dd\u30a4\u30f3\u30c8\uff08\u7d4c\u7531\u70b9\uff09\u3092\u6307\u5b9a\u3057\u3066 \u76f4\u884c\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053\u8a08\u753b\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e \u73fe\u5728\uff0c\u4e0a\u8ff0\u306e\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u304b\u3089\u59cb\u3081\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u6700\u521d\u306e\u72b6\u614b(\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\uff09\u306f\u30a6\u30a7\u30a4\u30dd\u30a4\u30f3\u30c8\u306b\u52a0\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3059\u304c\uff0c \u8868\u793a\u306e\u305f\u3081\u306b\u52a0\u3048\u3066\u304a\u304d\u307e\u3059\uff0e std :: vector < geometry_msgs :: Pose > waypoints ; waypoints . push_back ( start_pose2 ); geometry_msgs :: Pose target_pose3 = start_pose2 ; target_pose3 . position . z -= 0.2 ; waypoints . push_back ( target_pose3 ); // down target_pose3 . position . y -= 0.2 ; waypoints . push_back ( target_pose3 ); // right target_pose3 . position . z += 0.2 ; target_pose3 . position . y += 0.2 ; target_pose3 . position . x -= 0.2 ; waypoints . push_back ( target_pose3 ); // up and left \u76f4\u4ea4\u5ea7\u6a19\u7cfb\u3067\u52d5\u304d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\uff0c\u3088\u304f\uff0c\u7269\u4f53\u3078\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3084\u3064\u304b\u3080\u52d5\u4f5c\u3067\u884c\u308f\u308c\u307e\u3059\uff0e \u305d\u308c\u3089\u306e\u52d5\u4f5c\u306f\u3057\u3070\u3057\u3070\uff0c\u3086\u3063\u304f\u308a\u306a\u901f\u5ea6\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e \u3053\u3053\u3067\u306f\uff0c\u5404\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u6700\u5927\u901f\u5ea6\u306b\u5bfe\u3059\u308b scaling fanctor \u3092\u7528\u3044\u3066\uff0c\u901f\u5ea6\u306e\u6e1b\u901f\u3092\u884c\u3044\u307e\u3059\uff0e \u3053\u3053\u3067\u8a00\u3046\u901f\u5ea6\u306f\uff0c\u624b\u5148\u306e\u901f\u5ea6\u3067\u306f\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e move_group . setMaxVelocityScalingFactor ( 0.1 ); \u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u304a\u3044\u3066\uff11\uff43\uff4d\u3067\u88dc\u9593\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\uff0c\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u306e \u6700\u5927\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066\uff10\uff0e\uff10\uff11\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c jump threshold \u3092\uff10\uff0e\uff10\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a \u52b9\u679c\u7684\u306b jump threshold \u3092\u7121\u52b9\u306b\u3057\u307e\u3059\uff0e Worn jump threshold \u3092\u73fe\u5b9f\u306e\u30ed\u30dc\u30c3\u30c8\u3067\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u306f\uff0c\u5927\u304d\u306a\u4e88\u60f3\u3067\u304d\u306a\u3044\u5197\u9577\u306a\u52d5\u304d\u3092 \u5f15\u304d\u8d77\u3053\u3057\uff0c\u5b89\u5168\u6027\u306b\u5bfe\u3059\u308b\u554f\u984c\u3092\u5f15\u304d\u8d77\u3053\u3059\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e moveit_msgs :: RobotTrajectory trajectory ; const double jump_threshold = 0.0 ; const double eef_step = 0.01 ; double fraction = move_group . computeCartesianPath ( waypoints , eef_step , jump_threshold , trajectory ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 4 (Cartesian path) (%.2f%% acheived)\" , fraction * 100.0 ); Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Joint Space Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishPath ( waypoints , rvt :: LIME_GREEN , rvt :: SMALL ); for ( std :: size_t i = 0 ; i < waypoints . size (); ++ i ) visual_tools . publishAxisLabeled ( waypoints [ i ], \"pt\" + std :: to_string ( i ), rvt :: SMALL ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" ); \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8ffd\u52a0\u30fb\u524a\u9664\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u308a\u4ed8\u3051\u30fb\u53d6\u308a\u9664\u304d \u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092ROS\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\uff0e moveit_msgs :: CollisionObject collision_object ; collision_object . header . frame_id = move_group . getPlanningFrame (); id\u306f\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e collision_object . id = \"box1\" ; \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\u3068\u4eee\u60f3\u4e16\u754c\u3078\u306e\u8ffd\u52a0\u3092\u3057\u307e\u3059\uff0e shape_msgs :: SolidPrimitive primitive ; primitive . type = primitive . BOX ; primitive . dimensions . resize ( 3 ); primitive . dimensions [ 0 ] = 0.4 ; primitive . dimensions [ 1 ] = 0.1 ; primitive . dimensions [ 2 ] = 0.4 ; \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u59ff\u52e2\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\uff08frame_id\u3092\u57fa\u6e96\u306b\u3057\u3066\u6307\u5b9a\uff09 geometry_msgs :: Pose box_pose ; box_pose . orientation . w = 1.0 ; box_pose . position . x = 0.4 ; box_pose . position . y = - 0.2 ; box_pose . position . z = 1.0 ; collision_object . primitives . push_back ( primitive ); collision_object . primitive_poses . push_back ( box_pose ); collision_object . operation = collision_object . ADD ; std :: vector < moveit_msgs :: CollisionObject > collision_objects ; collision_objects . push_back ( collision_object ); \u3055\u3042\uff01\u885d\u7a81\u53ef\u80fd\u306a\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4eee\u60f3\u4e16\u754c\u306b\u633f\u5165\u3057\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Add an object into the world\" ); planning_scene_interface . addCollisionObjects ( collision_objects ); \u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Add object\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); MoveGroup\u304c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eROS\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u53d6\u308a\uff0c\u51e6\u7406\u3059\u308b\u306e\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\uff0e visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object appears in RViz\" ); \u3053\u308c\u306b\u3088\u308a\uff0c\u6211\u3005\u306f\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u907f\u3051\u3066\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\uff0e move_group . setStartState ( * move_group . getCurrentState ()); geometry_msgs :: Pose another_pose ; another_pose . orientation . w = 1.0 ; another_pose . position . x = 0.4 ; another_pose . position . y = - 0.4 ; another_pose . position . z = 0.9 ; move_group . setPoseTarget ( another_pose ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 5 (pose goal move around cuboid) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Obstacle Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"next step\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u306b\u53d6\u308a\u4ed8\u3051\u3066\u307f\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Attach the object to the robot\" ); move_group . attachObject ( collision_object . id ); Rviz\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u7528\u3044\u3066\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object attached to robot\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object attaches to the \" \"robot\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u53d6\u308a\u5916\u3057\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Detach the object from the robot\" ); move_group . detachObject ( collision_object . id ); Rviz\u3067\u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object dettached from robot\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object detaches to the \" \"robot\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4eee\u60f3\u4e16\u754c\u304b\u3089\u53d6\u308a\u9664\u304d\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Remove the object from the world\" ); std :: vector < std :: string > object_ids ; object_ids . push_back ( collision_object . id ); planning_scene_interface . removeCollisionObjects ( object_ids ); Rviz\u3067\u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object removed\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object disapears\" ); Launch\u30d5\u30a1\u30a4\u30eb \u5168\u90e8\u306elaunch\u30d5\u30a1\u30a4\u30eb\u306f \u3053\u3053 \u306eGitHub\u4e0a \u304b\u3089\u5165\u624b\u3067\u304d\u307e\u3059\uff0e","title":"Move Group C++ \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9"},{"location":"3/#move-group-c","text":"MoveIt!\u306b\u304a\u3044\u3066\uff0c\u6700\u3082\u7c21\u5358\u306a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f MoveGroupInterface \u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3059\uff0e\u305d\u306e\u30af\u30e9\u30b9\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u5b9f\u884c\u3057\u305d\u3046\u306a\u6b86\u3069\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u7279\u306b\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u3084\u30b4\u30fc\u30eb\u306e\u30dd\u30fc\u30ba\u3092\u8a2d\u5b9a\u3057\u305f\u308a\uff0c\u30e2\u30fc\u30b7\u30e7\u30f3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u3092\u8a08\u753b\u3057\u305f\u308a\uff0c \u30ed\u30dc\u30c3\u30c8\u3092\u52d5\u304b\u3057\u305f\u308a\uff0c\u74b0\u5883\u4e2d\u306b\u7269\u4f53\u3092\u8a2d\u7f6e/\u6392\u9664\u3057\u305f\u308a, \u30ed\u30dc\u30c3\u30c8\u306b\u7269\u4f53\u3092\u8a2d\u7f6e/\u6392\u9664\u3057\u305f\u308a\u3059\u308b \u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fROS\u306e\u30c8\u30d4\u30c3\u30af\u3084\u30b5\u30fc\u30d3\u30b9\uff0c\u307e\u305f\u306f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u901a\u3057\u3066 MoveGroup Node \u3068\u901a\u4fe1\u3057\u307e\u3059\uff0e move group interface \u30af\u30e9\u30b9\u3067\u3069\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u304b\u3092\u624b\u3063\u53d6\u308a\u65e9\u304f\u77e5\u308b\u305f\u3081\u306b\u306f\uff0c YouTube video demo \u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e","title":"Move Group C++ \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9"},{"location":"3/#_1","text":"\u304a\u304a\uff0c\u52c7\u8005\u3088\uff0e \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046! \u3092\u98db\u3070\u3057\u3066\u3057\u307e\u3046\u3068\u306f\u60c5\u3051\u306a\u3044\uff0e \u623b\u3063\u3066\u3084\u308a\u76f4\u3059\u306e\u3058\u3083\uff0e","title":"\u306f\u3058\u3081\u306b"},{"location":"3/#_2","text":"\uff12\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e\uff11\u3064\u76ee\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u306fRviz\u3092\u5b9f\u884c\u3057\uff0c\u305d\u3057\u3066\u30ed\u30fc\u30c9\u304c \u6e08\u3080\u306e\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\uff0e roslaunch panda_moveit_config demo.launch \uff12\u3064\u76ee\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067launch\u30d5\u30a1\u30a4\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304f\u3060\u3055\u3044\uff0e roslaucn moveit_tutorials move_group_interface_tutorial.launch Note \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306f\u30c7\u30e2\u3092\u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u3059\u3059\u3081\u308b\u305f\u3081\u306b\uff0c RvizVisualToolsGui \u30d1\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\u30d1\u30cd\u30eb\u3092Rviz\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u306f Visualization Turorial \u306eRviz Viaual Tools\u306e\u7ae0\u3092\u898b\u3066\u304f\u3060\u3055\u3044\uff0e \u3057\u3070\u3089\u304f\u3057\u305f\u5f8c\uff0cRviz\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304b\u308c\uff0c\u3053\u306e\u30da\u30fc\u30b8\u306e\u6700\u521d\u306b\u3042\u308b\u3088\u3046\u306a\u3082\u306e\u304c\u898b\u308c\u308b\u306f\u305a\u3067\u3059\uff0e \u3053\u308c\u304b\u3089\u3044\u304f\u3064\u304b move_group_interface \u30af\u30e9\u30b9\u306e\u30c7\u30e2\u3092\u4f53\u9a13\u3057\u3066\u3044\u304d\u307e\u3059\u304c\uff0c\u30c7\u30e2\u3092\u3059\u3059\u3081\u308b\u305f\u3081\u306b\u306f \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e0b\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b RvizVisualToolsGui \u306e Next \u30dc\u30bf\u30f3\u3092\u62bc\u3059\u304b\uff0c\u307e\u305f\u306f\uff0c \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u4e0a\u90e8\u306e Tools \u30d1\u30cd\u30eb\u306b\u3042\u308b Key Tool \u3092\u9078\u629e\u3057\uff0c\u3042\u306a\u305f\u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u306e N \u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3082\u3061\u308d\u3093\uff0cRviz\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u72b6\u614b\u3067\uff0e","title":"\u30b3\u30fc\u30c9\u306e\u5b9f\u884c"},{"location":"3/#_3","text":"\u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c\u306f\u5148\u7a0b\uff0c YouTube video demo \u3067\u78ba\u8a8d\u3057\u305f\u3068\u304a\u308a\u3067\u3059\u304c\uff0c \u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\uff0cRviz\u4e0a\u3067\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u884c\u308f\u308c\u308b\u3053\u3068\u3067\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u306e\u59ff\u52e2\u3092\u524d\u65b9\u306b\u52d5\u304b\u3059 \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u306e\u95a2\u7bc0\u3092\u52d5\u304b\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u304c\u30a2\u30fc\u30e0\u3092\u5f8c\u65b9\u306e\u65b0\u3057\u3044\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u30b4\u30fc\u30eb\u59ff\u52e2\u306b\u52d5\u304b\u3059 \u30ed\u30dc\u30c3\u30c8\u306e\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u304c\u6307\u5b9a\u3055\u308c\u305f\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u30d1\u30b9\u3092\u306a\u305e\u308b\uff08\u4e09\u89d2\u5f62\uff09 \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u53f3\u5074\u306b\u8a2d\u7f6e\u3059\u308b\uff0e \u30ed\u30dc\u30c3\u30c8\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u907f\u3051\u306a\u304c\u3089\uff0c\u6307\u5b9a\u3055\u308c\u305f\u59ff\u52e2\u306b\u79fb\u52d5\u3059\u308b\uff0e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30ed\u30dc\u30c3\u30c8\u306e\u624b\u9996\u306b\u53d6\u308a\u4ed8\u3051\u3089\u308c\u308b\uff0e(\u8272\u304c\u7d2b\u30fb\u30aa\u30ec\u30f3\u30b8\u30fb\u7dd1\u306b\u5909\u308f\u308b\uff09 \u74b0\u5883\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d6\u308a\u9664\u304b\u308c\u308b","title":"\u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c"},{"location":"3/#_4","text":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306f MoveIt! GitHub Project \u304b\u3089\u898b\u3089\u308c\u307e\u3059\uff0e\u3064\u304e\u306b\uff0c\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5206\u5272\u3057\u3066\u6a5f\u80fd\u3092\u8aac\u660e\u3057\u307e\u3059\uff0e","title":"\u5168\u4f53\u306e\u30b3\u30fc\u30c9"},{"location":"3/#_5","text":"\"planning group\"\u3068\u547c\u3070\u308c\u308b\u30b8\u30e7\u30a4\u30f3\u30c8\uff08\u95a2\u7bc0\uff09\u306e\u96c6\u5408\u3092MoveIt!\u306f\u64cd\u4f5c\u3057, \u305d\u308c\u3089(\u95a2\u7bc0\u306b\u95a2\u3059\u308b\u60c5\u5831)\u3092 JointModelGroup \u3068\u547c\u3070\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3057\u307e\u3059\uff0e MoveIt!\u306e\u8aac\u660e\u6587\u4e2d\u3067\u306f\uff0c\"planning group\"\u3068\"joint model group\"\u306f\u307b\u307c\u540c\u3058\u3088\u3046\u306a\u610f\u5473\u3092\u6301\u3063\u3066 \u4f7f\u308f\u308c\u307e\u3059\uff0e static const std :: string PLANNING_GROUP = \"panda_arm\" ; MoveGroupInterface \u30af\u30e9\u30b9\u306f\u3042\u306a\u305f\u304c\u4f7f\u7528\u3057\u305f\u3044planning group\u306e\u540d\u524d\u3092\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e moveit :: planning_interface :: MoveGroupInterface move_group ( PLANNING_GROUP ); \u6211\u3005\u306f PlanningSceneInterface \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u885d\u7a81\u7269\u4f53\u3092\u201d\u4eee\u60f3\u7a7a\u9593\u201d\u306b\u8a2d\u7f6e\u3057\u305f\u308a\u53d6\u308a\u9664\u3044\u305f\u308a\u3067\u304d\u307e\u3059\uff0e moveit :: planning_interface :: PlanningSceneInterface planning_scene_interface ; \u751f\u30dd\u30a4\u30f3\u30bf\u30fc\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b plannning group \u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\uff0e const robot_state :: JointModelGroup * joint_model_group = move_group . getCurrentState () -> getJointModelGroup ( PLANNING_GROUP ); Note \u751f\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u4f7f\u308f\u305a\u306b\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff0e","title":"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"3/#_6","text":"MoveitVisualTools\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff0c\u30ed\u30dc\u30c3\u30c8\uff0c\u305d\u3057\u3066\u8ecc\u8de1\u3092Rviz\u4e0a\u3067\u8868\u793a\u3055\u305b\u308b\u3060\u3051\u3067\u306a\u304f \u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u30c7\u30d0\u30c3\u30b0\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e namespace rvt = rviz_visual_tools ; moveit_visual_tools :: MoveItVisualTools visual_tools ( \"panda_link0\" ); visual_tools . deleteAllMarkers (); remote control \u306fRviz\u306e\u30dc\u30bf\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30b9\u30c6\u30c3\u30d7\u30fb\u30d0\u30a4\u30fb\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u308b\u3053\u3068\u304c \u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\uff0e visual_tools . loadRemoteControl (); Rviz\u306f\u305f\u304f\u3055\u3093\u306e\u7a2e\u985e\u306e\u30de\u30fc\u30ab\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e\u3053\u306e\u30c7\u30e2\u3067\u306f\uff0c\u30c6\u30ad\u30b9\u30c8\uff0c\u5186\u67f1\uff0c\u305d\u3057\u3066\u7403\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e Eigen :: Isometry3d text_pose = Eigen :: Isometry3d :: Identity (); text_pose . translation (). z () = 1.75 ; visual_tools . publishText ( text_pose , \"MoveGroupInterface Demo\" , rvt :: WHITE , rvt :: XLARGE ); \u307e\u3068\u3081\u3066\u30c8\u30d4\u30c3\u30af\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u306f\u5927\u91cf\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u306bRviz\u306b\u9001\u3089\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u91cf\u3092\u6e1b\u3089\u305b\u307e\u3059\uff0e visual_tools . trigger ();","title":"\u8868\u793a"},{"location":"3/#_7","text":"\u6211\u3005\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u5ea7\u6a19\u7cfb\u306e\u540d\u524d\u3092\u8868\u793a\u3057\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Planning frame: %s\" , move_group . getPlanningFrame (). c_str ()); \u6211\u3005\u306f\uff0c\u3053\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3057\u3066\u3044\u308b\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u3000\u30ea\u30f3\u30af\u306e\u540d\u524d\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"End effector link: %s\" , move_group . getEndEffectorLink (). c_str ()); \u6211\u3005\u306f\uff0c\u3053\u306e\u30ed\u30dc\u30c3\u30c8\u306b\u5b58\u5728\u3059\u308b\u3059\u3079\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Available Planning Groups:\" ); std :: copy ( move_group . getJointModelGroupNames (). begin (), move_group . getJointModelGroupNames (). end (), std :: ostream_iterator < std :: string > ( std :: cout , \", \" ));","title":"\u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b"},{"location":"3/#_8","text":"\u6211\u3005\u306f\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u3092\u6240\u671b\u306e\u59ff\u52e2\u306b\u3059\u308b\u305f\u3081\u306e\uff0c\u8ecc\u9053\u8a08\u753b\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e geometry_msgs :: Pose target_pose1 ; target_pose1 . orientation . w = 1.0 ; target_pose1 . position . x = 0.28 ; target_pose1 . position . y = - 0.2 ; target_pose1 . position . z = 0.5 ; move_group . setPoseTarget ( target_pose1 ); \u3044\u307e\uff0c\u8ecc\u9053\u8a08\u753b\u3068\u8868\u793a\u306e\u305f\u3081\u306b\u30d7\u30e9\u30f3\u30ca\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e \u6211\u3005\u306f\u8a08\u753b\u3059\u308b\u3060\u3051\u3060\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e move_group \u306b\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u3092 \u547d\u4ee4\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e moveit :: planning_interface :: MoveGroupInterface :: Plan my_plan ; bool success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 1 (pose goal) %s\" , success ? \"\" : \"FAILED\" );","title":"\u30c7\u30e2\u306e\u958b\u59cb"},{"location":"3/#_9","text":"Rviz\u4e0a\u3067\u76f4\u7dda\u30de\u30fc\u30ab\u3092\u5229\u7528\u3057\u3066\u8ecc\u9053\u8a08\u753b\u3092\u8868\u793a\u3055\u305b\u3089\u308c\u307e\u3059\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 1 as trajectory line\" ); visual_tools . publishAxisLabeled ( target_pose1 , \"pose1\" ); visual_tools . publishText ( text_pose , \"Pose Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" );","title":"\u8ecc\u9053\u8a08\u753b\u306e\u8868\u793a"},{"location":"3/#_10","text":"\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u306f move() \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u4ee5\u5916\u306f\uff0c\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u4f3c\u3066\u3044\u307e\u3059\uff0e \u4ee5\u524d\u306b\u8a2d\u5b9a\u3057\u305f\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306f\u4f9d\u7136\u3068\u3057\u3066\u6709\u52b9\u3067\uff0c\u305d\u306e\u305f\u3081\u306b\uff0c\u30ed\u30dc\u30c3\u30c8\u306f\u305d\u306e\u30b4\u30fc\u30eb\u59ff\u52e2\u306b\u79fb\u52d5\u3057\u3088\u3046\u3068\u8a66\u307f\u307e\u3059\uff0e \u4eca\u56de\uff0c\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f move() \u95a2\u6570\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\uff0e\u306a\u305c\u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u306f\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u95a2\u6570\u3067\u3042\u308a\uff0c\u6709\u52b9\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9 \u3068\u8ecc\u9053\u3092\u5b9f\u884c\u304c\u6210\u529f\u3057\u305f\u3068\u3044\u3046\u53cd\u5fdc\u304c\u5fc5\u8981\u3060\u304b\u3089\u3067\u3059\uff0e /* Uncomment below line when working with a real robot */ /* move_group.move(); */ Note \u8981\u306f\uff0c move() \u95a2\u6570\u306f\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u3068PC\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\uff0c\u6709\u52b9\u3067\u3042\u308a\uff0c\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u304c \u8ecc\u9053\u8a08\u753b\u3092\u5b9f\u884c\u3057\u307e\u3059\u304c\uff0cRviz\u3092\u4f7f\u7528\u3057\u3066\u4eee\u60f3\u7684\u306a\u74b0\u5883\u4e0b\u3067\u306f\u5229\u7528\u3059\u308b\u3068\u30c7\u30e2\u304c\u9032\u307e\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046 \u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e","title":"\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u306b\u79fb\u52d5\u3055\u305b\u308b"},{"location":"3/#_11","text":"Note \u95a2\u7bc0\u7a7a\u9593\u3068\u306f\uff0c\uff13\u6b21\u5143\u7a7a\u9593\u306b\u5bfe\u3057\u3066\u4f7f\u308f\u308c\u308b\u8a00\u8449\u3067\uff0c\u7c21\u5358\u306b\u8a00\u3046\u3068\uff0c{ $\\theta$ } \u95a2\u7bc0\u7a7a\u9593\u5185\u3067\u306e\u30b4\u30fc\u30eb\u3092\u8a2d\u5b9a\u3057\uff0c\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u3053\u308c\u306f\u4e0a\u3067\u8a2d\u5b9a\u3057\u305f\u59ff\u52e2\u306e\u76ee\u6a19\u3092\u4e0a\u66f8\u304d\u3057\u307e\u3059. \u59cb\u3081\u308b\u306b\u5f53\u305f\u3063\u3066\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff0e RobotState \u306f \u73fe\u5728\u306e\u4f4d\u7f6e\u30fb\u901f\u5ea6\u30fb\u52a0\u901f\u5ea6\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\uff0e moveit :: core :: RobotStatePtr current_state = move_group . getCurrentState (); \u6b21\u306b\uff0c\u73fe\u5728\u4f7f\u7528\u3057\u3066\u3044\u308b\u30b0\u30eb\u30fc\u30d7\u306e\u73fe\u5728\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3092\u6c42\u3081\u307e\u3057\u3087\u3046\uff0e std :: vector < double > joint_group_positions ; current_state -> copyJointGroupPositions ( joint_model_group , joint_group_positions ); \u4e00\u3064\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3092\u66f4\u65b0\u3057\uff0c\u95a2\u7bc0\u7a7a\u9593\u5185\u306e\u65b0\u305f\u306a\u30b4\u30fc\u30eb\u3078\u8ecc\u9053\u8a08\u753b\u3092\u4f5c\u6210\u3057\uff0c\u305d\u306e\u8ecc\u9053\u8a08\u753b\u3092 \u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e joint_group_positions [ 0 ] = - 1.0 ; // radians move_group . setJointValueTarget ( joint_group_positions ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 2 (joint space goal) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u307e\u3059\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Joint Space Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" );","title":"\u95a2\u7bc0\u7a7a\u9593\u5185\u3067\u306e\u30b4\u30fc\u30eb\u306b\u5bfe\u3059\u308b\u8ecc\u9053\u8a08\u753b"},{"location":"3/#_12","text":"Note \u8ecc\u9053\u4e0a\u306e\u5236\u7d04 \u3084 \u5236\u7d04 \u306fPath Constraints\u3092\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u306e\u30ea\u30f3\u30af\u306b\u5bfe\u3057\u3066\u7c21\u5358\u306b\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e \u65e9\u901f\uff0c\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\uff0c\u30b4\u30fc\u30eb\u306e\u59ff\u52e2\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\uff0e \u3067\u306f\uff0c\u307e\u305a\uff0c\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e moveit_msgs :: OrientationConstraint ocm ; ocm . link_name = \"panda_link7\" ; ocm . header . frame_id = \"panda_link0\" ; ocm . orientation . w = 1.0 ; ocm . absolute_x_axis_tolerance = 0.1 ; ocm . absolute_y_axis_tolerance = 0.1 ; ocm . absolute_z_axis_tolerance = 0.1 ; ocm . weight = 1.0 ; \u6b21\u306b\uff0c\u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u4ed8\u3051\u52a0\u3048\u307e\u3059\uff0e moveit_msgs :: Constraints test_constraints ; test_constraints . orientation_constraints . push_back ( ocm ); move_group . setPathConstraints ( test_constraints ); \u6211\u3005\u306f\uff0c\u4ee5\u524d\u306b\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3057\u305f\u30b4\u30fc\u30eb\u3092\u518d\u5229\u7528\u3057\u307e\u3059\uff0e \u3053\u308c\u306f\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u304c\u3059\u3067\u306b\u8ecc\u9053\u4e0a\u306e\u5236\u7d04\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u306e\u307f \u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u305d\u306e\u305f\u3081\uff0c\u6211\u3005\u306f\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306b\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e robot_state :: RobotState start_state ( * move_group . getCurrentState ()); geometry_msgs :: Pose start_pose2 ; start_pose2 . orientation . w = 1.0 ; start_pose2 . position . x = 0.55 ; start_pose2 . position . y = - 0.05 ; start_pose2 . position . z = 0.8 ; start_state . setFromIK ( joint_model_group , start_pose2 ); move_group . setStartState ( start_state ); \u305d\u308c\u3067\u306f\uff0c\u8a2d\u5b9a\u3057\u305f\u3070\u304b\u308a\u306e\u65b0\u3057\u3044\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u304b\u3089\u3088\u308a\u65e9\u3044\u30b4\u30fc\u30eb\u59ff\u52e2\u3078\u306e\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e move_group . setPoseTarget ( target_pose1 ); \u5236\u7d04\u304c\u3042\u308b\u72b6\u614b\u3067\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3059\u308b\u306e\u306f\uff0c\u306a\u3057\u306e\u72b6\u614b\u3068\u6bd4\u3079\u3066\u9045\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e \u306a\u305c\u306a\u3089\uff0c\u5236\u7d04\u304c\u3042\u308b\u5834\u5408\u306f\uff0c\u3059\u3079\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306b\u9006\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\uff0e \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\uff15\u79d2\u304b\u3089\u5341\u5206\u306b\u8a08\u7b97\u3057\u3066\u89e3\u3092\u767a\u898b\u3067\u304d\u308b\u3088\u3046\u306b\u8a08\u7b97\u6642\u9593\u3092\u5897\u3084\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e move_group . setPlanningTime ( 10.0 ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 3 (constraints) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishAxisLabeled ( start_pose2 , \"start\" ); visual_tools . publishAxisLabeled ( target_pose1 , \"goal\" ); visual_tools . publishText ( text_pose , \"Constrained Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"next step\" ); \u3082\u3057\uff0c\u3046\u307e\u304f\u884c\u3063\u305f\u3089\u5236\u7d04\u3092\u6d88\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\uff0e move_group . clearPathConstraints ();","title":"\u5236\u7d04\u304c\u3042\u308b\u5834\u5408\u306e\u8ecc\u9053\u8a08\u753b"},{"location":"3/#_13","text":"\u3082\u3061\u308d\u3093\uff0c\u3042\u306a\u305f\u306f\uff0c\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u304c\u901a\u3063\u3066\u3044\u304f\u30a6\u30a7\u30a4\u30dd\u30a4\u30f3\u30c8\uff08\u7d4c\u7531\u70b9\uff09\u3092\u6307\u5b9a\u3057\u3066 \u76f4\u884c\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053\u8a08\u753b\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e \u73fe\u5728\uff0c\u4e0a\u8ff0\u306e\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\u304b\u3089\u59cb\u3081\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u6700\u521d\u306e\u72b6\u614b(\u30b9\u30bf\u30fc\u30c8\u72b6\u614b\uff09\u306f\u30a6\u30a7\u30a4\u30dd\u30a4\u30f3\u30c8\u306b\u52a0\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3059\u304c\uff0c \u8868\u793a\u306e\u305f\u3081\u306b\u52a0\u3048\u3066\u304a\u304d\u307e\u3059\uff0e std :: vector < geometry_msgs :: Pose > waypoints ; waypoints . push_back ( start_pose2 ); geometry_msgs :: Pose target_pose3 = start_pose2 ; target_pose3 . position . z -= 0.2 ; waypoints . push_back ( target_pose3 ); // down target_pose3 . position . y -= 0.2 ; waypoints . push_back ( target_pose3 ); // right target_pose3 . position . z += 0.2 ; target_pose3 . position . y += 0.2 ; target_pose3 . position . x -= 0.2 ; waypoints . push_back ( target_pose3 ); // up and left \u76f4\u4ea4\u5ea7\u6a19\u7cfb\u3067\u52d5\u304d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\uff0c\u3088\u304f\uff0c\u7269\u4f53\u3078\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3084\u3064\u304b\u3080\u52d5\u4f5c\u3067\u884c\u308f\u308c\u307e\u3059\uff0e \u305d\u308c\u3089\u306e\u52d5\u4f5c\u306f\u3057\u3070\u3057\u3070\uff0c\u3086\u3063\u304f\u308a\u306a\u901f\u5ea6\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e \u3053\u3053\u3067\u306f\uff0c\u5404\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u6700\u5927\u901f\u5ea6\u306b\u5bfe\u3059\u308b scaling fanctor \u3092\u7528\u3044\u3066\uff0c\u901f\u5ea6\u306e\u6e1b\u901f\u3092\u884c\u3044\u307e\u3059\uff0e \u3053\u3053\u3067\u8a00\u3046\u901f\u5ea6\u306f\uff0c\u624b\u5148\u306e\u901f\u5ea6\u3067\u306f\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e move_group . setMaxVelocityScalingFactor ( 0.1 ); \u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u304a\u3044\u3066\uff11\uff43\uff4d\u3067\u88dc\u9593\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\uff0c\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u306e \u6700\u5927\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066\uff10\uff0e\uff10\uff11\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c jump threshold \u3092\uff10\uff0e\uff10\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a \u52b9\u679c\u7684\u306b jump threshold \u3092\u7121\u52b9\u306b\u3057\u307e\u3059\uff0e Worn jump threshold \u3092\u73fe\u5b9f\u306e\u30ed\u30dc\u30c3\u30c8\u3067\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u306f\uff0c\u5927\u304d\u306a\u4e88\u60f3\u3067\u304d\u306a\u3044\u5197\u9577\u306a\u52d5\u304d\u3092 \u5f15\u304d\u8d77\u3053\u3057\uff0c\u5b89\u5168\u6027\u306b\u5bfe\u3059\u308b\u554f\u984c\u3092\u5f15\u304d\u8d77\u3053\u3059\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e moveit_msgs :: RobotTrajectory trajectory ; const double jump_threshold = 0.0 ; const double eef_step = 0.01 ; double fraction = move_group . computeCartesianPath ( waypoints , eef_step , jump_threshold , trajectory ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 4 (Cartesian path) (%.2f%% acheived)\" , fraction * 100.0 ); Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Joint Space Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishPath ( waypoints , rvt :: LIME_GREEN , rvt :: SMALL ); for ( std :: size_t i = 0 ; i < waypoints . size (); ++ i ) visual_tools . publishAxisLabeled ( waypoints [ i ], \"pt\" + std :: to_string ( i ), rvt :: SMALL ); visual_tools . trigger (); visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to continue the demo\" );","title":"\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053"},{"location":"3/#_14","text":"\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092ROS\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\uff0e moveit_msgs :: CollisionObject collision_object ; collision_object . header . frame_id = move_group . getPlanningFrame (); id\u306f\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e collision_object . id = \"box1\" ; \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\u3068\u4eee\u60f3\u4e16\u754c\u3078\u306e\u8ffd\u52a0\u3092\u3057\u307e\u3059\uff0e shape_msgs :: SolidPrimitive primitive ; primitive . type = primitive . BOX ; primitive . dimensions . resize ( 3 ); primitive . dimensions [ 0 ] = 0.4 ; primitive . dimensions [ 1 ] = 0.1 ; primitive . dimensions [ 2 ] = 0.4 ; \u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u59ff\u52e2\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\uff08frame_id\u3092\u57fa\u6e96\u306b\u3057\u3066\u6307\u5b9a\uff09 geometry_msgs :: Pose box_pose ; box_pose . orientation . w = 1.0 ; box_pose . position . x = 0.4 ; box_pose . position . y = - 0.2 ; box_pose . position . z = 1.0 ; collision_object . primitives . push_back ( primitive ); collision_object . primitive_poses . push_back ( box_pose ); collision_object . operation = collision_object . ADD ; std :: vector < moveit_msgs :: CollisionObject > collision_objects ; collision_objects . push_back ( collision_object ); \u3055\u3042\uff01\u885d\u7a81\u53ef\u80fd\u306a\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4eee\u60f3\u4e16\u754c\u306b\u633f\u5165\u3057\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Add an object into the world\" ); planning_scene_interface . addCollisionObjects ( collision_objects ); \u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Add object\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); MoveGroup\u304c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eROS\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u53d6\u308a\uff0c\u51e6\u7406\u3059\u308b\u306e\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\uff0e visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object appears in RViz\" ); \u3053\u308c\u306b\u3088\u308a\uff0c\u6211\u3005\u306f\u7bb1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u907f\u3051\u3066\u8ecc\u9053\u8a08\u753b\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\uff0e move_group . setStartState ( * move_group . getCurrentState ()); geometry_msgs :: Pose another_pose ; another_pose . orientation . w = 1.0 ; another_pose . position . x = 0.4 ; another_pose . position . y = - 0.4 ; another_pose . position . z = 0.9 ; move_group . setPoseTarget ( another_pose ); success = ( move_group . plan ( my_plan ) == moveit :: planning_interface :: MoveItErrorCode :: SUCCESS ); ROS_INFO_NAMED ( \"tutorial\" , \"Visualizing plan 5 (pose goal move around cuboid) %s\" , success ? \"\" : \"FAILED\" ); Rviz\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . deleteAllMarkers (); visual_tools . publishText ( text_pose , \"Obstacle Goal\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . publishTrajectoryLine ( my_plan . trajectory_ , joint_model_group ); visual_tools . trigger (); visual_tools . prompt ( \"next step\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u306b\u53d6\u308a\u4ed8\u3051\u3066\u307f\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Attach the object to the robot\" ); move_group . attachObject ( collision_object . id ); Rviz\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u7528\u3044\u3066\u72b6\u614b\u3092\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object attached to robot\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object attaches to the \" \"robot\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u53d6\u308a\u5916\u3057\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Detach the object from the robot\" ); move_group . detachObject ( collision_object . id ); Rviz\u3067\u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object dettached from robot\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object detaches to the \" \"robot\" ); \u3055\u3042\uff0c\u885d\u7a81\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4eee\u60f3\u4e16\u754c\u304b\u3089\u53d6\u308a\u9664\u304d\u307e\u3057\u3087\u3046\uff0e ROS_INFO_NAMED ( \"tutorial\" , \"Remove the object from the world\" ); std :: vector < std :: string > object_ids ; object_ids . push_back ( collision_object . id ); planning_scene_interface . removeCollisionObjects ( object_ids ); Rviz\u3067\u72b6\u614b\u3092\u30c6\u30ad\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3057\u3087\u3046\uff0e visual_tools . publishText ( text_pose , \"Object removed\" , rvt :: WHITE , rvt :: XLARGE ); visual_tools . trigger (); /* Wait for MoveGroup to recieve and process the attached collision object message */ visual_tools . prompt ( \"Press 'next' in the RvizVisualToolsGui window to once the collision object disapears\" );","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8ffd\u52a0\u30fb\u524a\u9664\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u308a\u4ed8\u3051\u30fb\u53d6\u308a\u9664\u304d"},{"location":"3/#launch","text":"\u5168\u90e8\u306elaunch\u30d5\u30a1\u30a4\u30eb\u306f \u3053\u3053 \u306eGitHub\u4e0a \u304b\u3089\u5165\u624b\u3067\u304d\u307e\u3059\uff0e","title":"Launch\u30d5\u30a1\u30a4\u30eb"},{"location":"4/","text":"Robot Model\u3068Robot State \u3053\u306e\u7ae0\u3067\u306fC++\u3092\u5229\u7528\u3057\u3066MoveIt!\u306e\u904b\u52d5\u5b66\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e RobotModel \u30af\u30e9\u30b9\u3068 RobotState \u30af\u30e9\u30b9 RobotModel \u30af\u30e9\u30b9\u3068 RobotState \u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u3066\u30ed\u30dc\u30c3\u30c8\u306e\u904b\u52d5\u5b66\u306b\u95a2\u3059\u308b\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e RobotModel \u30af\u30e9\u30b9\u306fURDF\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u3059\u3079\u3066\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3068\u30ea\u30f3\u30af\u306e\u95a2\u4fc2(\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u53ef\u52d5\u7bc4\u56f2\u3092\u542b\u3080\uff09\u306b \u95a2\u3059\u308b\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u307e\u305f\uff0cRobotModel\u30af\u30e9\u30b9\u306fSRDF\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u30ea\u30f3\u30af\u3068\u30b8\u30e7\u30a4\u30f3\u30c8\u3092\u5206\u3051\u308b\u3053\u3068\u3082 \u884c\u3044\u307e\u3059\uff0e URDF\u3068SRDF\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u3064\u3044\u3066\u306f URDF and SRDF Tutorial \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e RobotState \u30af\u30e9\u30b9\u306f\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u305f\u3068\u3048\u3070\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff08\u4efb\u610f\uff09\uff0c\u52a0\u901f\u5ea6\uff08\u4efb\u610f\uff09\u3067\u3059\uff0e \u3053\u308c\u3089\u306f\u30e4\u30b3\u30d3\u30a2\u30f3\u3084\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306a\u3069\u306e\u73fe\u5728\u306e\u72b6\u614b\u306b\u4f9d\u5b58\u3059\u308b\u904b\u52d5\u5b66\u306e\u60c5\u5831\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e RobotState\u306f\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3082\u6709\u3057\u3066\u3044\u307e\u3059\uff0e \u305d\u308c\u3089\u3092\u7528\u3044\u3066\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u4f4d\u7f6e\uff08\u76f4\u4ea4\u5ea7\u6a19\u7cfb\uff09\u3084\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053\u306b\u57fa\u3065\u3044\u305f\u30a2\u30fc\u30e0\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068 \u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u306e\u4f8b\u3067\u306f\uff0cpanda\u30ed\u30dc\u30c3\u30c8\u3092\u7528\u3044\u3066\u305d\u308c\u3089\u306e\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u3042\u30fc\uff0c\u306a\u3093\u3068\u8a00\u3048\u3070\u3044\u3044\u306e\u304b\uff0c\u7686\u76ee\u691c\u8a0e\u3082\u3064\u304b\u306a\u3044\u304c\uff0c\u3044\u3084\uff0c\u3057\u304b\u3057\uff0c\u7aef\u7684\u306b\u8a00\u3046\u306a\u3089\u3070 \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u304b\u3089\u59cb\u3081\u3066\u304f\u308c\u306a\u3044\u304b\uff0e \u30b3\u30fc\u30c9\u306e\u5b9f\u884c \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3084\u5b9f\u884c\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fMoveIt!\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u4e00\u74b0\u3068\u3057\u3066 \u3042\u306a\u305f\u304c\u6e96\u5099\u3057\u305f moveit_tutorial \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306b\u3042\u308a\u307e\u3059\uff0e moveit_tutorial \u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089launch\u30d5\u30a1\u30a4\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u307e\u3059\uff0e roslaunch moveit_tutorials robot_model_and_robot_state_tutorial.launch \u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c \u4e88\u60f3\u3055\u308c\u308b\u51fa\u529b\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\u4eca\u56de\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u89d2\u5ea6\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u306b\u306a\u308b\u306e\u3067 \u6570\u5b57\u306f\u7570\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff0e ros.moveit_tutorials: Model frame: /panda_link0 ros.moveit_tutorials: Joint panda_joint1: 0 .000000 ros.moveit_tutorials: Joint panda_joint2: 0 .000000 ros.moveit_tutorials: Joint panda_joint3: 0 .000000 ros.moveit_tutorials: Joint panda_joint4: 0 .000000 ros.moveit_tutorials: Joint panda_joint5: 0 .000000 ros.moveit_tutorials: Joint panda_joint6: 0 .000000 ros.moveit_tutorials: Joint panda_joint7: 0 .000000 ros.moveit_tutorials: Current state is not valid ros.moveit_tutorials: Current state is valid ros.moveit_tutorials: Translation: -0.541498 -0.592805 0 .400443 ros.moveit_tutorials: Rotation: -0.395039 0 .600666 -0.695086 0 .299981 -0.630807 -0.715607 -0.868306 -0.491205 0 .0690048 ros.moveit_tutorials: Joint panda_joint1: -2.407308 ros.moveit_tutorials: Joint panda_joint2: 1 .555370 ros.moveit_tutorials: Joint panda_joint3: -2.102171 ros.moveit_tutorials: Joint panda_joint4: -0.011156 ros.moveit_tutorials: Joint panda_joint5: 1 .100545 ros.moveit_tutorials: Joint panda_joint6: 3 .230793 ros.moveit_tutorials: Joint panda_joint7: -2.651568 ros.moveit_tutorials: Jacobian: 0 .592805 -0.0500638 -0.036041 0 .366761 -0.0334361 0 .128712 -4.33681e-18 -0.541498 -0.0451907 0 .0417049 -0.231187 0 .0403683 0 .00288573 3 .46945e-18 0 -0.799172 0 .0772022 -0.247151 0 .0818336 0 .0511662 0 0 0 .670056 -0.742222 0 .349402 -0.748556 -0.344057 -0.695086 0 -0.74231 -0.669976 -0.367232 -0.662737 0 .415389 -0.715607 1 4 .89669e-12 0 .0154256 0 .862009 0 .021077 0 .842067 0 .0690048 Note \u3082\u3057\uff0c\u3042\u306a\u305f\u306e\u51fa\u529b(ROS console logger)\u304c\u7570\u306a\u3063\u3066\u3044\u3066\u3082\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u30d6\u30ed\u30b0 \u3092\u3082\u3068\u306b\u3057\u3066\u51fa\u529b\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u30b3\u30fc\u30c9\u5168\u4f53 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306f \u3053\u3053 \u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\uff0e \u30b9\u30bf\u30fc\u30c8 RobotModel \u30af\u30e9\u30b9\u3092\u4f7f\u3044\u59cb\u3081\u308b\u305f\u3081\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3082\u306e\u3059\u3054\u304f\u7c21\u5358\u3067\u3059\uff0e \u4e00\u822c\u7684\u306b\u306f\uff0c\u6700\u3082\u9ad8\u3044\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8(\u4f8b\u3048\u3070\uff0cRobotModelLoader\u30af\u30e9\u30b9)\u304cRobotModel\u30af\u30e9\u30b9\u306eshared_ptr\u3092\u8fd4\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e \u3082\u3057\uff0c\u3053\u308c\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\uff0c\u3053\u306e\u65b9\u6cd5\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u4f8b\u3067\u306f\u305d\u306e\u3088\u3046\u306ashared_ptr\u304b\u3089\u59cb\u3081\u3066\uff0c\u57fa\u672c\u7684\u306aAPI\u306b\u7d5e\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\uff0e \u3053\u306e\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3059\u308b\u3088\u308a\u8a73\u7d30\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u306b\u8aad\u3080\u3053\u3068\u3067\uff0c \u305d\u308c\u3089\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u5f97\u3089\u308c\u307e\u3059\uff0e RobotModelLoader \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f97\u308b\u3068\u3053\u3068\u304b\u3089\u8a71\u3092\u59cb\u3081\u307e\u3059\uff0e RobotModelLoader \u306fROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u304b\u3089 \u30ed\u30dc\u30c3\u30c8\u306b\u95a2\u3059\u308b\u60c5\u5831(robot_description)\u3092\u898b\u3064\u3051\u3066\u304d\u3066 RobotModel \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\uff0e robot_model_loader :: RobotModelLoader robot_model_loader ( \"robot_description\" ); robot_model :: RobotModelPtr kinematic_model = robot_model_loader . getModel (); ROS_INFO ( \"Model frame: %s\" , kinematic_model -> getModelFrame (). c_str ()); RobotModel \u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u6211\u3005\u306f\u30ed\u30dc\u30c3\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3092\u53f8\u308b RobotState \u30af\u30e9\u30b9 \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u72b6\u614b\u5185\u306e\u3059\u3079\u3066\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e \u305d\u306e\u3068\u304d\u306b\uff0c JointModelGroup \u3092 \u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u306e\u30af\u30e9\u30b9\u306f\u7279\u5b9a\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u95a2\u3059\u308b\u30ed\u30dc\u30c3\u30c8\u306e\u30e2\u30c7\u30eb\u3092\u8868\u3057\u3066\u3044\u307e\u3059\uff0e \u4f8b\u3048\u3070\uff0cPanda robot\u306e\"panda_arm\"\u3068\u304b\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u3053\u3068\u3067\u3059\uff0e\u3053\u306e\u30b0\u30eb\u30fc\u30d7\u306f\u30a2\u30fc\u30e0\u306e\u6839\u672c\u304b\u3089 \u5148\u7aef\u307e\u3067\u306e\u30e2\u30c7\u30eb\u3092\u6709\u3057\u3066\u3044\u307e\u3059\uff0e\u4ed6\u306e\u30b0\u30eb\u30fc\u30d7\u3060\u3068\uff0c\u30b0\u30ea\u30c3\u30d1\u30fc\u90e8\u5206\u3060\u3051\u306e\u30e2\u30c7\u30eb\u3092\u6709\u3059\u308b\u30b0\u30eb\u30fc\u30d7\u306a\u3069\u304c \u3042\u308a\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u30e2\u30c7\u30eb\u3068\u306f\u30ea\u30f3\u30af\u306e\u9577\u3055\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u7a3c\u50cd\u9650\u754c\u306a\u3069\u306e\u30ea\u30f3\u30af\u3068\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u95a2\u3059\u308b\u5168\u60c5\u5831\u306e\u3053\u3068\u3060\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\uff0e robot_state :: RobotStatePtr kinematic_state ( new robot_state :: RobotState ( kinematic_model )); kinematic_state -> setToDefaultValues (); const robot_state :: JointModelGroup * joint_model_group = kinematic_model -> getJointModelGroup ( \"panda_arm\" ); const std :: vector < std :: string >& joint_names = joint_model_group -> getVariableNames (); \u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u5024\u3092\u5f97\u308b \u6211\u3005\u306f\uff0cPanda Arm\u306e\u72b6\u614b\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u73fe\u5728\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3082\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e std :: vector < double > joint_values ; kinematic_state -> copyJointGroupPositions ( joint_model_group , joint_values ); for ( std :: size_t i = 0 ; i < joint_names . size (); ++ i ) { ROS_INFO ( \"Joint %s: %f\" , joint_names [ i ]. c_str (), joint_values [ i ]); } \u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u7a3c\u50cd\u9650\u754c setJointGroupPosition() \u3060\u3051\u3067\u306f\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u65b0\u305f\u306a\u7a3c\u50cd\u9650\u754c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e \u3055\u3089\u306b\uff0c enforceBounds() \u3092\u547c\u3076\u3053\u3068\u3067\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e /* Set one joint in the Panda arm outside its joint limit */ joint_values [ 0 ] = 5.57 ; kinematic_state -> setJointGroupPositions ( joint_model_group , joint_values ); /* Check whether any joint is outside its joint limits */ ROS_INFO_STREAM ( \"Current state is \" << ( kinematic_state -> satisfiesBounds () ? \"valid\" : \"not valid\" )); /* Enforce the joint limits for this state and check again*/ kinematic_state -> enforceBounds (); ROS_INFO_STREAM ( \"Current state is \" << ( kinematic_state -> satisfiesBounds () ? \"valid\" : \"not valid\" )); \u9806\u904b\u52d5\u5b66 \u3055\u3042\uff0c\u3044\u3088\u3044\u3088\uff0c\u6211\u3005\u306f\u9806\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u306b \u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u5024\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\u6211\u3005\u304c\u9806\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3057\u3066\u59ff\u52e2\u3092\u898b\u3064\u3051\u305f\u3044\"panda_link8\"\u306f\"panda_arm\"\u30b0\u30eb\u30fc\u30d7\u306b\u304a\u3051\u308b\u6700\u3082\u30a2\u30fc\u30e0\u306e\u6839\u672c\u304b\u3089 \u9060\u3044\u30ea\u30f3\u30af\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e kinematic_state -> setToRandomPositions ( joint_model_group ); const Eigen :: Isometry3d & end_effector_state = kinematic_state -> getGlobalLinkTransform ( \"panda_link8\" ); /* Print end-effector pose. Remember that this is in the model frame */ ROS_INFO_STREAM ( \"Translation: \\n \" << end_effector_state . translation () << \" \\n \" ); ROS_INFO_STREAM ( \"Rotation: \\n \" << end_effector_state . rotation () << \" \\n \" ); \u9006\u904b\u52d5\u5b66 \u3082\u3061\u308d\u3093\uff0c\u6211\u3005\u306f\u9006\u904b\u52d5\u5b66(a.k.a IK)\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e IK\u3092\u89e3\u304f\u305f\u3081\u306b\uff0c\u4e0b\u8a18\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3059\uff0e \u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u6240\u671b\u306e\u59ff\u52e2\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\uff0c\u3053\u308c\u306f\"panda_arm\"\u30b0\u30eb\u30fc\u30d7\u306e\u6700\u5f8c\u306e\u30ea\u30f3\u30af\u3067\u3059\uff09 \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8: 0.01\u79d2 double timeout = 0.1 ; bool found_ik = kinematic_state -> setFromIK ( joint_model_group , end_effector_state , timeout ); IK\u306e\u89e3\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\uff08\u3082\u3057\uff0c\u898b\u3064\u304b\u308c\u3070\u306e\u8a71\u3067\u3059\u304c\uff09 if ( found_ik ) { kinematic_state -> copyJointGroupPositions ( joint_model_group , joint_values ); for ( std :: size_t i = 0 ; i < joint_names . size (); ++ i ) { ROS_INFO ( \"Joint %s: %f\" , joint_names [ i ]. c_str (), joint_values [ i ]); } } else { ROS_INFO ( \"Did not find IK solution\" ); } \u30e4\u30b3\u30d3\u30a2\u30f3 \u30e4\u30b3\u30d3\u30a2\u30f3\u3068\u306f\uff0c\u884c\u5217\u306e\u3053\u3068\u3067\uff0c\u5168\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u89d2\u901f\u5ea6\u3092\u5165\u529b\u3059\u308b\u3068\u624b\u5148\u30ea\u30f3\u30af\u306e\u901f\u5ea6\u3092 \u51fa\u529b\u3059\u308b\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e \u3053\u308c\u306e\u9006\u884c\u5217\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u6240\u671b\u306e\u624b\u5148\u901f\u5ea6\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c\u5404\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u3069\u308c\u304f\u3089\u3044\u306e \u89d2\u901f\u5ea6\u3092\u4e0e\u3048\u308c\u3070\u3044\u3044\u304b\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u307e\u305f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u30e4\u30b3\u30d3\u30a2\u30f3\u3092\u6570\u5024\u89e3\u6790\u7684\u306b\u89e3\u3044\u3066\u3044\u308b\u306e\u3067 \u73fe\u5728\u306e\u95a2\u7bc0\u306e\u89d2\u5ea6\u8fd1\u508d\u306e\u307f\u3067\u6709\u52b9\u306a\u30e4\u30b3\u30d3\u30a2\u30f3\u304c\u5c0e\u51fa\u3055\u308c\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u95a2\u7bc0\u89d2\u5ea6\u304c\u5909\u308f\u308b\u305f\u3073\u306b\u30e4\u30b3\u30d3\u30a2\u30f3\u306f\u8a08\u7b97\u3057\u76f4\u3059\u5fc5\u8981\u304c\u308a\u307e\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3067\u306f\u4e0b\u8a18\u306e\u540d\u79f0\u3092\u7528\u3044\u308b\u306e\u304c\u6163\u4f8b\u3067\u3059\uff0e \u30e4\u30b3\u30d3\u884c\u5217 : \u30e4\u30b3\u30d3\u30a2\u30f3 \u30e4\u30b3\u30d3\u884c\u5217\u5f0f : \u30e4\u30b3\u30d3\u884c\u5217\u5f0f \u6570\u5b66\u3067\u306f\u4e0b\u8a18\u306e\u540d\u79f0\u3092\u7528\u3044\u308b\u306e\u304c\u6163\u4f8b\u3067\u3059\uff0e \u30e4\u30b3\u30d3\u884c\u5217 : \u30e4\u30b3\u30d3\u884c\u5217 \u30e4\u30b3\u30d3\u884c\u5217\u5f0f : \u30e4\u30b3\u30d3\u30a2\u30f3 \u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3068\u306f\u540d\u79f0\u304c\u9006\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u4eca\u56de\u306f\u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u306e\u6163\u4f8b\u306b\u5f93\u3044\u307e\u3059\uff0e\u6570\u5b66\u3067\u30e4\u30b3\u30d3\u30a2\u30f3\u306f\u30ac\u30a6\u30b9\u7a4d\u5206\u306a\u3069\u3092\u8a08\u7b97\u3059\u308b\u3068\u304d\u306b \u5229\u7528\u3055\u308c\u307e\u3059\uff0e Eigen :: Vector3d reference_point_position ( 0.0 , 0.0 , 0.0 ); Eigen :: MatrixXd jacobian ; kinematic_state -> getJacobian ( joint_model_group , kinematic_state -> getLinkModel ( joint_model_group -> getLinkModelNames (). back ()), reference_point_position , jacobian ); ROS_INFO_STREAM ( \"Jacobian: \\n \" << jacobian << \" \\n \" ); Launch\u30d5\u30a1\u30a4\u30eb \u4eca\u56de\u306e\u4f8b\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u3042\u306a\u305f\u306flaunch\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u4e0b\u8a18\u306e\uff12\u3064\u306e\u3053\u3068\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Panda\u30a2\u30fc\u30e0\u306eURDF\u3068SRDF\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\uff0e MoveIt! Setup Assistant\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f kinematic_solver \u306e\u8a2d\u5b9a\u3092ROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\uff0e \u305f\u3060\u3057\uff0c\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f\u30af\u30e9\u30b9\u306e\u30ce\u30fc\u30c9\u3068\u540c\u3058\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\uff0e \u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b <node ... \u306e\u306a\u304b\u306b <rosparam ... \u3092\u66f8\u3044\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u306d\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e <launch> <include file= \"$(find panda_moveit_config)/launch/planning_context.launch\" > <arg name= \"load_robot_description\" value= \"true\" /> </include> <node name= \"robot_model_and_robot_state_tutorial\" pkg= \"moveit_tutorials\" type= \"robot_model_and_robot_state_tutorial\" respawn= \"false\" output= \"screen\" > <rosparam command= \"load\" file= \"$(find panda_moveit_config)/config/kinematics.yaml\" /> </node> </launch> \u3053\u306elaunch\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u306a\u306b\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\uff0e \u307e\u305a\u306f\u3058\u3081\u306e <include... \u304b\u3089\u59cb\u307e\u308b\u304f\u304f\u308a\u306e\u4e2d\u3067\u306f\uff0c planning_contexe.launch \u3068\u3044\u3046 launch\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u3066\u304d\u3066\uff0claunch\u3057\u3066\u307e\u3059\uff0e \u6b21\u306e <node ... \u304b\u3089\u59cb\u307e\u308b\u304f\u304f\u308a\u306e\u4e2d\u3067\u306fmoveit_tutorials\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306e robot_model_and_robot_state_tutorial\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\uff0e \u3055\u3089\u306b\uff0ckinematic_solver\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c kinematics.yaml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067 \u305d\u306e\u8a2d\u5b9a\u3092ROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u307e\u3059\uff0e Robot State\u306e\u30c7\u30d0\u30c3\u30b0 Robot State\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306b\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30c4\u30fc\u30eb\u3092\u5229\u7528\u53ef\u80fd\u3067\u3059\uff0e rosrun moveit_ros_planning moveit_print_planning_model_info","title":"Robot Model\u3068Robot State"},{"location":"4/#robot-modelrobot-state","text":"\u3053\u306e\u7ae0\u3067\u306fC++\u3092\u5229\u7528\u3057\u3066MoveIt!\u306e\u904b\u52d5\u5b66\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e","title":"Robot Model\u3068Robot State"},{"location":"4/#robotmodelrobotstate","text":"RobotModel \u30af\u30e9\u30b9\u3068 RobotState \u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u3066\u30ed\u30dc\u30c3\u30c8\u306e\u904b\u52d5\u5b66\u306b\u95a2\u3059\u308b\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e RobotModel \u30af\u30e9\u30b9\u306fURDF\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u3059\u3079\u3066\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3068\u30ea\u30f3\u30af\u306e\u95a2\u4fc2(\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u53ef\u52d5\u7bc4\u56f2\u3092\u542b\u3080\uff09\u306b \u95a2\u3059\u308b\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u307e\u305f\uff0cRobotModel\u30af\u30e9\u30b9\u306fSRDF\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u30ea\u30f3\u30af\u3068\u30b8\u30e7\u30a4\u30f3\u30c8\u3092\u5206\u3051\u308b\u3053\u3068\u3082 \u884c\u3044\u307e\u3059\uff0e URDF\u3068SRDF\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u3064\u3044\u3066\u306f URDF and SRDF Tutorial \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e RobotState \u30af\u30e9\u30b9\u306f\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u305f\u3068\u3048\u3070\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u4f4d\u7f6e\uff0c\u901f\u5ea6\uff08\u4efb\u610f\uff09\uff0c\u52a0\u901f\u5ea6\uff08\u4efb\u610f\uff09\u3067\u3059\uff0e \u3053\u308c\u3089\u306f\u30e4\u30b3\u30d3\u30a2\u30f3\u3084\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306a\u3069\u306e\u73fe\u5728\u306e\u72b6\u614b\u306b\u4f9d\u5b58\u3059\u308b\u904b\u52d5\u5b66\u306e\u60c5\u5831\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff0e RobotState\u306f\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3082\u6709\u3057\u3066\u3044\u307e\u3059\uff0e \u305d\u308c\u3089\u3092\u7528\u3044\u3066\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u4f4d\u7f6e\uff08\u76f4\u4ea4\u5ea7\u6a19\u7cfb\uff09\u3084\u76f4\u4ea4\u5ea7\u6a19\u7cfb\u306e\u8ecc\u9053\u306b\u57fa\u3065\u3044\u305f\u30a2\u30fc\u30e0\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068 \u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u306e\u4f8b\u3067\u306f\uff0cpanda\u30ed\u30dc\u30c3\u30c8\u3092\u7528\u3044\u3066\u305d\u308c\u3089\u306e\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e","title":"RobotModel\u30af\u30e9\u30b9\u3068RobotState\u30af\u30e9\u30b9"},{"location":"4/#_1","text":"\u3042\u30fc\uff0c\u306a\u3093\u3068\u8a00\u3048\u3070\u3044\u3044\u306e\u304b\uff0c\u7686\u76ee\u691c\u8a0e\u3082\u3064\u304b\u306a\u3044\u304c\uff0c\u3044\u3084\uff0c\u3057\u304b\u3057\uff0c\u7aef\u7684\u306b\u8a00\u3046\u306a\u3089\u3070 \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u304b\u3089\u59cb\u3081\u3066\u304f\u308c\u306a\u3044\u304b\uff0e","title":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01"},{"location":"4/#_2","text":"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3084\u5b9f\u884c\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fMoveIt!\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u4e00\u74b0\u3068\u3057\u3066 \u3042\u306a\u305f\u304c\u6e96\u5099\u3057\u305f moveit_tutorial \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306b\u3042\u308a\u307e\u3059\uff0e moveit_tutorial \u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089launch\u30d5\u30a1\u30a4\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u307e\u3059\uff0e roslaunch moveit_tutorials robot_model_and_robot_state_tutorial.launch","title":"\u30b3\u30fc\u30c9\u306e\u5b9f\u884c"},{"location":"4/#_3","text":"\u4e88\u60f3\u3055\u308c\u308b\u51fa\u529b\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\u4eca\u56de\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u89d2\u5ea6\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u306b\u306a\u308b\u306e\u3067 \u6570\u5b57\u306f\u7570\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff0e ros.moveit_tutorials: Model frame: /panda_link0 ros.moveit_tutorials: Joint panda_joint1: 0 .000000 ros.moveit_tutorials: Joint panda_joint2: 0 .000000 ros.moveit_tutorials: Joint panda_joint3: 0 .000000 ros.moveit_tutorials: Joint panda_joint4: 0 .000000 ros.moveit_tutorials: Joint panda_joint5: 0 .000000 ros.moveit_tutorials: Joint panda_joint6: 0 .000000 ros.moveit_tutorials: Joint panda_joint7: 0 .000000 ros.moveit_tutorials: Current state is not valid ros.moveit_tutorials: Current state is valid ros.moveit_tutorials: Translation: -0.541498 -0.592805 0 .400443 ros.moveit_tutorials: Rotation: -0.395039 0 .600666 -0.695086 0 .299981 -0.630807 -0.715607 -0.868306 -0.491205 0 .0690048 ros.moveit_tutorials: Joint panda_joint1: -2.407308 ros.moveit_tutorials: Joint panda_joint2: 1 .555370 ros.moveit_tutorials: Joint panda_joint3: -2.102171 ros.moveit_tutorials: Joint panda_joint4: -0.011156 ros.moveit_tutorials: Joint panda_joint5: 1 .100545 ros.moveit_tutorials: Joint panda_joint6: 3 .230793 ros.moveit_tutorials: Joint panda_joint7: -2.651568 ros.moveit_tutorials: Jacobian: 0 .592805 -0.0500638 -0.036041 0 .366761 -0.0334361 0 .128712 -4.33681e-18 -0.541498 -0.0451907 0 .0417049 -0.231187 0 .0403683 0 .00288573 3 .46945e-18 0 -0.799172 0 .0772022 -0.247151 0 .0818336 0 .0511662 0 0 0 .670056 -0.742222 0 .349402 -0.748556 -0.344057 -0.695086 0 -0.74231 -0.669976 -0.367232 -0.662737 0 .415389 -0.715607 1 4 .89669e-12 0 .0154256 0 .862009 0 .021077 0 .842067 0 .0690048 Note \u3082\u3057\uff0c\u3042\u306a\u305f\u306e\u51fa\u529b(ROS console logger)\u304c\u7570\u306a\u3063\u3066\u3044\u3066\u3082\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u30d6\u30ed\u30b0 \u3092\u3082\u3068\u306b\u3057\u3066\u51fa\u529b\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e","title":"\u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c"},{"location":"4/#_4","text":"\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306f \u3053\u3053 \u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\uff0e","title":"\u30b3\u30fc\u30c9\u5168\u4f53"},{"location":"4/#_5","text":"RobotModel \u30af\u30e9\u30b9\u3092\u4f7f\u3044\u59cb\u3081\u308b\u305f\u3081\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3082\u306e\u3059\u3054\u304f\u7c21\u5358\u3067\u3059\uff0e \u4e00\u822c\u7684\u306b\u306f\uff0c\u6700\u3082\u9ad8\u3044\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8(\u4f8b\u3048\u3070\uff0cRobotModelLoader\u30af\u30e9\u30b9)\u304cRobotModel\u30af\u30e9\u30b9\u306eshared_ptr\u3092\u8fd4\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e \u3082\u3057\uff0c\u3053\u308c\u304c\u53ef\u80fd\u3067\u3042\u308c\u3070\uff0c\u3053\u306e\u65b9\u6cd5\u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u4f8b\u3067\u306f\u305d\u306e\u3088\u3046\u306ashared_ptr\u304b\u3089\u59cb\u3081\u3066\uff0c\u57fa\u672c\u7684\u306aAPI\u306b\u7d5e\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\uff0e \u3053\u306e\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3059\u308b\u3088\u308a\u8a73\u7d30\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u306b\u8aad\u3080\u3053\u3068\u3067\uff0c \u305d\u308c\u3089\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u5f97\u3089\u308c\u307e\u3059\uff0e RobotModelLoader \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f97\u308b\u3068\u3053\u3068\u304b\u3089\u8a71\u3092\u59cb\u3081\u307e\u3059\uff0e RobotModelLoader \u306fROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u304b\u3089 \u30ed\u30dc\u30c3\u30c8\u306b\u95a2\u3059\u308b\u60c5\u5831(robot_description)\u3092\u898b\u3064\u3051\u3066\u304d\u3066 RobotModel \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\uff0e robot_model_loader :: RobotModelLoader robot_model_loader ( \"robot_description\" ); robot_model :: RobotModelPtr kinematic_model = robot_model_loader . getModel (); ROS_INFO ( \"Model frame: %s\" , kinematic_model -> getModelFrame (). c_str ()); RobotModel \u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u6211\u3005\u306f\u30ed\u30dc\u30c3\u30c8\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3092\u53f8\u308b RobotState \u30af\u30e9\u30b9 \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u72b6\u614b\u5185\u306e\u3059\u3079\u3066\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e \u305d\u306e\u3068\u304d\u306b\uff0c JointModelGroup \u3092 \u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u306e\u30af\u30e9\u30b9\u306f\u7279\u5b9a\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u95a2\u3059\u308b\u30ed\u30dc\u30c3\u30c8\u306e\u30e2\u30c7\u30eb\u3092\u8868\u3057\u3066\u3044\u307e\u3059\uff0e \u4f8b\u3048\u3070\uff0cPanda robot\u306e\"panda_arm\"\u3068\u304b\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u3053\u3068\u3067\u3059\uff0e\u3053\u306e\u30b0\u30eb\u30fc\u30d7\u306f\u30a2\u30fc\u30e0\u306e\u6839\u672c\u304b\u3089 \u5148\u7aef\u307e\u3067\u306e\u30e2\u30c7\u30eb\u3092\u6709\u3057\u3066\u3044\u307e\u3059\uff0e\u4ed6\u306e\u30b0\u30eb\u30fc\u30d7\u3060\u3068\uff0c\u30b0\u30ea\u30c3\u30d1\u30fc\u90e8\u5206\u3060\u3051\u306e\u30e2\u30c7\u30eb\u3092\u6709\u3059\u308b\u30b0\u30eb\u30fc\u30d7\u306a\u3069\u304c \u3042\u308a\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u30e2\u30c7\u30eb\u3068\u306f\u30ea\u30f3\u30af\u306e\u9577\u3055\uff0c\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u7a3c\u50cd\u9650\u754c\u306a\u3069\u306e\u30ea\u30f3\u30af\u3068\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u95a2\u3059\u308b\u5168\u60c5\u5831\u306e\u3053\u3068\u3060\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\uff0e robot_state :: RobotStatePtr kinematic_state ( new robot_state :: RobotState ( kinematic_model )); kinematic_state -> setToDefaultValues (); const robot_state :: JointModelGroup * joint_model_group = kinematic_model -> getJointModelGroup ( \"panda_arm\" ); const std :: vector < std :: string >& joint_names = joint_model_group -> getVariableNames ();","title":"\u30b9\u30bf\u30fc\u30c8"},{"location":"4/#_6","text":"\u6211\u3005\u306f\uff0cPanda Arm\u306e\u72b6\u614b\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u73fe\u5728\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u3082\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e std :: vector < double > joint_values ; kinematic_state -> copyJointGroupPositions ( joint_model_group , joint_values ); for ( std :: size_t i = 0 ; i < joint_names . size (); ++ i ) { ROS_INFO ( \"Joint %s: %f\" , joint_names [ i ]. c_str (), joint_values [ i ]); }","title":"\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u5024\u3092\u5f97\u308b"},{"location":"4/#_7","text":"setJointGroupPosition() \u3060\u3051\u3067\u306f\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u65b0\u305f\u306a\u7a3c\u50cd\u9650\u754c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e \u3055\u3089\u306b\uff0c enforceBounds() \u3092\u547c\u3076\u3053\u3068\u3067\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e /* Set one joint in the Panda arm outside its joint limit */ joint_values [ 0 ] = 5.57 ; kinematic_state -> setJointGroupPositions ( joint_model_group , joint_values ); /* Check whether any joint is outside its joint limits */ ROS_INFO_STREAM ( \"Current state is \" << ( kinematic_state -> satisfiesBounds () ? \"valid\" : \"not valid\" )); /* Enforce the joint limits for this state and check again*/ kinematic_state -> enforceBounds (); ROS_INFO_STREAM ( \"Current state is \" << ( kinematic_state -> satisfiesBounds () ? \"valid\" : \"not valid\" ));","title":"\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u7a3c\u50cd\u9650\u754c"},{"location":"4/#_8","text":"\u3055\u3042\uff0c\u3044\u3088\u3044\u3088\uff0c\u6211\u3005\u306f\u9806\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30b8\u30e7\u30a4\u30f3\u30c8\u89d2\u5ea6\u306b \u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u5024\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\u6211\u3005\u304c\u9806\u904b\u52d5\u5b66\u3092\u8a08\u7b97\u3057\u3066\u59ff\u52e2\u3092\u898b\u3064\u3051\u305f\u3044\"panda_link8\"\u306f\"panda_arm\"\u30b0\u30eb\u30fc\u30d7\u306b\u304a\u3051\u308b\u6700\u3082\u30a2\u30fc\u30e0\u306e\u6839\u672c\u304b\u3089 \u9060\u3044\u30ea\u30f3\u30af\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e kinematic_state -> setToRandomPositions ( joint_model_group ); const Eigen :: Isometry3d & end_effector_state = kinematic_state -> getGlobalLinkTransform ( \"panda_link8\" ); /* Print end-effector pose. Remember that this is in the model frame */ ROS_INFO_STREAM ( \"Translation: \\n \" << end_effector_state . translation () << \" \\n \" ); ROS_INFO_STREAM ( \"Rotation: \\n \" << end_effector_state . rotation () << \" \\n \" );","title":"\u9806\u904b\u52d5\u5b66"},{"location":"4/#_9","text":"\u3082\u3061\u308d\u3093\uff0c\u6211\u3005\u306f\u9006\u904b\u52d5\u5b66(a.k.a IK)\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e IK\u3092\u89e3\u304f\u305f\u3081\u306b\uff0c\u4e0b\u8a18\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3059\uff0e \u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e\u6240\u671b\u306e\u59ff\u52e2\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\uff0c\u3053\u308c\u306f\"panda_arm\"\u30b0\u30eb\u30fc\u30d7\u306e\u6700\u5f8c\u306e\u30ea\u30f3\u30af\u3067\u3059\uff09 \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8: 0.01\u79d2 double timeout = 0.1 ; bool found_ik = kinematic_state -> setFromIK ( joint_model_group , end_effector_state , timeout ); IK\u306e\u89e3\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\uff08\u3082\u3057\uff0c\u898b\u3064\u304b\u308c\u3070\u306e\u8a71\u3067\u3059\u304c\uff09 if ( found_ik ) { kinematic_state -> copyJointGroupPositions ( joint_model_group , joint_values ); for ( std :: size_t i = 0 ; i < joint_names . size (); ++ i ) { ROS_INFO ( \"Joint %s: %f\" , joint_names [ i ]. c_str (), joint_values [ i ]); } } else { ROS_INFO ( \"Did not find IK solution\" ); }","title":"\u9006\u904b\u52d5\u5b66"},{"location":"4/#_10","text":"\u30e4\u30b3\u30d3\u30a2\u30f3\u3068\u306f\uff0c\u884c\u5217\u306e\u3053\u3068\u3067\uff0c\u5168\u30b8\u30e7\u30a4\u30f3\u30c8\u306e\u89d2\u901f\u5ea6\u3092\u5165\u529b\u3059\u308b\u3068\u624b\u5148\u30ea\u30f3\u30af\u306e\u901f\u5ea6\u3092 \u51fa\u529b\u3059\u308b\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e \u3053\u308c\u306e\u9006\u884c\u5217\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u6240\u671b\u306e\u624b\u5148\u901f\u5ea6\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\uff0c\u5404\u30b8\u30e7\u30a4\u30f3\u30c8\u306b\u3069\u308c\u304f\u3089\u3044\u306e \u89d2\u901f\u5ea6\u3092\u4e0e\u3048\u308c\u3070\u3044\u3044\u304b\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u307e\u305f\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u30e4\u30b3\u30d3\u30a2\u30f3\u3092\u6570\u5024\u89e3\u6790\u7684\u306b\u89e3\u3044\u3066\u3044\u308b\u306e\u3067 \u73fe\u5728\u306e\u95a2\u7bc0\u306e\u89d2\u5ea6\u8fd1\u508d\u306e\u307f\u3067\u6709\u52b9\u306a\u30e4\u30b3\u30d3\u30a2\u30f3\u304c\u5c0e\u51fa\u3055\u308c\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u95a2\u7bc0\u89d2\u5ea6\u304c\u5909\u308f\u308b\u305f\u3073\u306b\u30e4\u30b3\u30d3\u30a2\u30f3\u306f\u8a08\u7b97\u3057\u76f4\u3059\u5fc5\u8981\u304c\u308a\u307e\u3059\uff0e \u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3067\u306f\u4e0b\u8a18\u306e\u540d\u79f0\u3092\u7528\u3044\u308b\u306e\u304c\u6163\u4f8b\u3067\u3059\uff0e \u30e4\u30b3\u30d3\u884c\u5217 : \u30e4\u30b3\u30d3\u30a2\u30f3 \u30e4\u30b3\u30d3\u884c\u5217\u5f0f : \u30e4\u30b3\u30d3\u884c\u5217\u5f0f \u6570\u5b66\u3067\u306f\u4e0b\u8a18\u306e\u540d\u79f0\u3092\u7528\u3044\u308b\u306e\u304c\u6163\u4f8b\u3067\u3059\uff0e \u30e4\u30b3\u30d3\u884c\u5217 : \u30e4\u30b3\u30d3\u884c\u5217 \u30e4\u30b3\u30d3\u884c\u5217\u5f0f : \u30e4\u30b3\u30d3\u30a2\u30f3 \u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u3068\u306f\u540d\u79f0\u304c\u9006\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u4eca\u56de\u306f\u30ed\u30dc\u30c3\u30c8\u5de5\u5b66\u306e\u6163\u4f8b\u306b\u5f93\u3044\u307e\u3059\uff0e\u6570\u5b66\u3067\u30e4\u30b3\u30d3\u30a2\u30f3\u306f\u30ac\u30a6\u30b9\u7a4d\u5206\u306a\u3069\u3092\u8a08\u7b97\u3059\u308b\u3068\u304d\u306b \u5229\u7528\u3055\u308c\u307e\u3059\uff0e Eigen :: Vector3d reference_point_position ( 0.0 , 0.0 , 0.0 ); Eigen :: MatrixXd jacobian ; kinematic_state -> getJacobian ( joint_model_group , kinematic_state -> getLinkModel ( joint_model_group -> getLinkModelNames (). back ()), reference_point_position , jacobian ); ROS_INFO_STREAM ( \"Jacobian: \\n \" << jacobian << \" \\n \" );","title":"\u30e4\u30b3\u30d3\u30a2\u30f3"},{"location":"4/#launch","text":"\u4eca\u56de\u306e\u4f8b\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u3042\u306a\u305f\u306flaunch\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u4e0b\u8a18\u306e\uff12\u3064\u306e\u3053\u3068\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Panda\u30a2\u30fc\u30e0\u306eURDF\u3068SRDF\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\uff0e MoveIt! Setup Assistant\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f kinematic_solver \u306e\u8a2d\u5b9a\u3092ROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\uff0e \u305f\u3060\u3057\uff0c\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f\u30af\u30e9\u30b9\u306e\u30ce\u30fc\u30c9\u3068\u540c\u3058\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\uff0e \u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b <node ... \u306e\u306a\u304b\u306b <rosparam ... \u3092\u66f8\u3044\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u306d\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e <launch> <include file= \"$(find panda_moveit_config)/launch/planning_context.launch\" > <arg name= \"load_robot_description\" value= \"true\" /> </include> <node name= \"robot_model_and_robot_state_tutorial\" pkg= \"moveit_tutorials\" type= \"robot_model_and_robot_state_tutorial\" respawn= \"false\" output= \"screen\" > <rosparam command= \"load\" file= \"$(find panda_moveit_config)/config/kinematics.yaml\" /> </node> </launch> \u3053\u306elaunch\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u306a\u306b\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\uff0e \u307e\u305a\u306f\u3058\u3081\u306e <include... \u304b\u3089\u59cb\u307e\u308b\u304f\u304f\u308a\u306e\u4e2d\u3067\u306f\uff0c planning_contexe.launch \u3068\u3044\u3046 launch\u30d5\u30a1\u30a4\u30eb\u3092\u63a2\u3057\u3066\u304d\u3066\uff0claunch\u3057\u3066\u307e\u3059\uff0e \u6b21\u306e <node ... \u304b\u3089\u59cb\u307e\u308b\u304f\u304f\u308a\u306e\u4e2d\u3067\u306fmoveit_tutorials\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u306e robot_model_and_robot_state_tutorial\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\uff0e \u3055\u3089\u306b\uff0ckinematic_solver\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c kinematics.yaml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067 \u305d\u306e\u8a2d\u5b9a\u3092ROS\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u307e\u3059\uff0e","title":"Launch\u30d5\u30a1\u30a4\u30eb"},{"location":"4/#robot-state","text":"Robot State\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u652f\u63f4\u3059\u308b\u305f\u3081\u306b\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30c4\u30fc\u30eb\u3092\u5229\u7528\u53ef\u80fd\u3067\u3059\uff0e rosrun moveit_ros_planning moveit_print_planning_model_info","title":"Robot State\u306e\u30c7\u30d0\u30c3\u30b0"},{"location":"5/","text":"\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3 \u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3 \u30af\u30e9\u30b9\u306f\u4e3b\u306b\uff0c \u885d\u7a81\u691c\u77e5(collision checking) \u3068 \u5236\u7d04\u691c\u8a3c(constraint checking) \u306e\u305f\u3081\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u6628\u6669\u306f\u3072\u3069\u96e8\u3060\u3063\u305f\uff0c\u672c\u5f53\u306b\u3072\u3069\u3044\u96e8\u3067\uff0c\u4f55\u3082\u304b\u3082\u6d41\u3055\u308c\u3066\u3057\u307e\u3063\u305f\uff0e \u3057\u304b\u3057\uff0c\u4e00\u3064\u3060\u3051\u6b8b\u3055\u308c\u305f\u3082\u306e\u304c\u3042\u308b\uff0e\u305d\u308c\u304c\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u3060\uff0e \u3059\u3079\u3066\u6d41\u3055\u308c\u3066\u3057\u307e\u3063\u305f\u306e\u3060\u304b\u3089\uff0c\u305d\u3053\u304b\u3089\u59cb\u3081\u308b\u3057\u304b\u3042\u308b\u307e\u3044\uff0e \u5168\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u5168\u90e8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f \u3053\u3053 \u306b\u3042\u308b\uff0e \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7 PlanningScene \u30af\u30e9\u30b9\u306f RobotModel \u30af\u30e9\u30b9\u304bURDF\u3068SRDF\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e \u3057\u304b\u3057\uff0c\u3053\u308c\u3089\u306e\u65b9\u6cd5\u3067 PlanningScene \u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53ef\u3059\u308b\u306e\u306f\u304a\u3059\u3059\u3081\u306e\u65b9\u6cd5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e PlanningSceneMonitor \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066 PlanningScene \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3068\u30ed\u30dc\u30c3\u30c8\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b \u30bb\u30f3\u30b5\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b PlanningScene \u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0e (\u8a73\u3057\u304f\u306f\u6b21\u306e\u7ae0\u3067\u8b70\u8ad6\u3057\u307e\u3059) \u3053\u306e\u7ae0\u3067\u306f\uff0c\u6211\u3005\u306f PlannningScene \u30af\u30e9\u30b9\u3092\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u307e\u3059\u304c \u3053\u308c\u306f\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3067\u3059\uff0e robot_model_loader :: RobotModelLoader robot_model_loader ( \"robot_description\" ); robot_model :: RobotModelPtr kinematic_model = robot_model_loader . getModel (); planning_scene :: PlanningScene planning_scene ( kinematic_model ); \u885d\u7a81\u691c\u77e5 \u81ea\u5df1\u885d\u7a81\u691c\u77e5(Self-collision checking) \u6700\u521d\u306b\u6211\u3005\u304c\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306f\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u304c\u81ea\u5df1\u885d\u7a81\u72b6\u614b\u306b\u3042\u308b\u304b\u3069\u3046\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e \u4f8b\u3048\u3070\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u8a2d\u5b9a\u306b\u304a\u3044\u3066\u5404\u30d1\u30fc\u30c4\u540c\u58eb\u304c\u304a\u4e92\u3044\u306b\u63a5\u89e6\u3057\u3066\u3044\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u8abf\u3079\u307e\u3059\uff0e \u81ea\u5df1\u885d\u7a81\u691c\u77e5\u3092\u8abf\u3079\u308b\u305f\u3081\u306b CollisionRequest \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068 CollisionResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\uff0c\u305d\u308c\u3092\u885d\u7a81\u691c\u77e5\u95a2\u6570\u306b\u6e21\u3057\u307e\u3059\uff0e \u7d50\u679c(CollisionResult)\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u304c\u81ea\u5df1\u885d\u7a81\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u81ea\u5df1\u885d\u7a81\u691c\u77e5\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u30d1\u30c3\u30c9\u306a\u3057( Unpadded )\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e \u4f8b\u3048\u3070\uff0c\u885d\u7a81\u691c\u77e5\u306fURDF\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u7528\u30e1\u30c3\u30b7\u30e5\u3092\u76f4\u63a5\u7684\u306b\u4f7f\u7528\u3057\uff0c \u3053\u306e\u3068\u304d\u4f7f\u7528\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u7528\u30e1\u30c3\u30b7\u30e5\u306b\u306f\u8ffd\u52a0\u306e\u4f59\u767d( Padding )\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\uff0e collision_detection :: CollisionRequest collision_request ; collision_detection :: CollisionResult collision_result ; planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 1: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); \u72b6\u614b\u306e\u5909\u66f4 \u3055\u3042\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e PlanningScene \u30af\u30e9\u30b9\u306f\u73fe\u5728\u306e\u72b6\u614b\u3092\u5185\u90e8\u306b\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u6211\u3005\u306f\u305d\u308c\u3092\u53c2\u7167\u3057\uff0c\u305d\u308c\u3092\u5909\u66f4\u3057\uff0c\u305d\u3057\u3066\uff0c\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306e\u8a2d\u5b9a\u306b\u5bfe\u3057\u3066\u885d\u7a81\u691c\u77e5\u304c\u8d77\u3053\u308b\u304b\u3069\u3046\u304b \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u65b0\u3057\u3044\u885d\u7a81\u691c\u77e5\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b collision_result \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30af\u30ea\u30a2\u3057\u3066\u304a\u304f \u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\uff0e robot_state :: RobotState & current_state = planning_scene . getCurrentStateNonConst (); current_state . setToRandomPositions (); collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 2: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); \u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af \u3055\u3042\uff0c\u3044\u3088\u3044\u3088\uff0c\u6211\u3005\u306fPanda\u30ed\u30dc\u30c3\u30c8\u306e\u30cf\u30f3\u30c9\u306e\u90e8\u5206 \u306e\u307f \u306b\u5bfe\u3057\u3066\u885d\u7a81\u691c\u77e5\u3092\u884c\u3044\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u30cf\u30f3\u30c9\u3068\u30ed\u30dc\u30c3\u30c8\u306e\u305d\u306e\u4ed6\u306e\u90e8\u54c1\u304c\u885d\u7a81\u3057\u3066\u3044\u308b\u304b\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e \u6211\u3005\u306f\u3053\u308c\u3092\u30b0\u30eb\u30fc\u30d7\u30cd\u30fc\u30e0\"hand\"\u3092 collision_request \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e collision_request . group_name = \"hand\" ; current_state . setToRandomPositions (); collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 3: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); \u885d\u7a81\u60c5\u5831\u306e\u53d6\u5f97 \u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u81ea\u5df1\u885d\u7a81\u3059\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u59ff\u52e2\u306bPanda\u30a2\u30fc\u30e0\u3092\u79fb\u52d5\u3055\u305b\u307e\u3057\u3087\u3046\uff0e \u5b9f\u969b\uff0c\u3053\u306e\u72b6\u614b\u306fPanda\u30a2\u30fc\u30e0\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u30ea\u30df\u30c3\u30c8\u306e\u5916\u5074\u3067\u3042\u308a\uff0c\u76f4\u63a5\u7684\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3053\u3068\u306b \u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e std :: vector < double > joint_values = { 0.0 , 0.0 , 0.0 , - 2.9 , 0.0 , 1.4 , 0.0 }; const robot_model :: JointModelGroup * joint_model_group = current_state . getJointModelGroup ( \"panda_arm\" ); current_state . setJointGroupPositions ( joint_model_group , joint_values ); ROS_INFO_STREAM ( \"Test 4: Current state is \" << ( current_state . satisfiesBounds ( joint_model_group ) ? \"valid\" : \"not valid\" )); \u3055\u3042\uff0c\u6211\u3005\u306f\u5148\u7a0b\u8a2d\u5b9a\u3057\u305f\u885d\u7a81\u3057\u3066\u3044\u308b\u3067\u3042\u308d\u3046Panda\u30a2\u30fc\u30e0\u304b\u3089\u885d\u7a81\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u6211\u3005\u306f\u885d\u7a81\u60c5\u5831(contact information)\u3092\u885d\u7a81\u30ea\u30af\u30a8\u30b9\u30c8(collision requiest)\u306b \u9069\u5207\u306a\u60c5\u5831\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u885d\u7a81\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f\u8fd4\u3063\u3066\u304f\u308b \u6700\u5927\u306e\u885d\u7a81\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u3053\u306e\u885d\u7a81\u6570\u306f\u5927\u304d\u306a\u6570\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\uff0e collision_request . contacts = true ; collision_request . max_contacts = 1000 ; collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 5: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); collision_detection :: CollisionResult :: ContactMap :: const_iterator it ; for ( it = collision_result . contacts . begin (); it != collision_result . contacts . end (); ++ it ) { ROS_INFO ( \"Contact between: %s and %s\" , it -> first . first . c_str (), it -> first . second . c_str ()); } Allowed Collision Matrix\u306e\u66f4\u65b0 Allowd Collision Matrix (ACM) \u30af\u30e9\u30b9\u306f\uff0c\u3042\u308b\u7269\u4f53\u9593\uff08\u4f8b\u3048\u3070\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u30d1\u30fc\u30c4\u3068\u7a7a\u9593\u5185\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3067 \u8d77\u3053\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u885d\u7a81\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3092\u4f1d\u3048\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u6211\u3005\u306f\u885d\u7a81\u691c\u77e5\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u306b\u4e0a\u8ff0\u3057\u305f\u30ea\u30f3\u30af\u9593\u306e\u3059\u3079\u3066\u306e\u885d\u7a81\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3092\u4f1d\u3048\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\uff0c\u305f\u3068\u3048\uff0c\u5b9f\u969b\u306f\u305d\u306e\u30ea\u30f3\u30af\u304c\u885d\u7a81\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\uff0c \u885d\u7a81\u691c\u77e5\u95a2\u6570\u306f\u305d\u306e\u885d\u7a81\u3092\u7121\u8996\u3057\uff0c\u30ed\u30dc\u30c3\u30c8\u304c\u3053\u306e\u7279\u5b9a\u306e\u72b6\u614b\u306b\u5bfe\u3057\u3066\uff0c\u885d\u7a81\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092 \u8fd4\u3057\u307e\u3059\uff0e \u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff0c\u6211\u3005\u304c\u3069\u306e\u3088\u3046\u306bAllowed Collision Matrix\u3068\u73fe\u5728\u306e\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057 \u305d\u3057\u3066\uff0c\u305d\u308c\u3092\u9451\u8cde\u691c\u77e5\u95a2\u6570\u306b\u3069\u306e\u3088\u3046\u306b\u6e21\u3059\u304b\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\uff0e collision_detection :: AllowedCollisionMatrix acm = planning_scene . getAllowedCollisionMatrix (); robot_state :: RobotState copied_state = planning_scene . getCurrentState (); collision_detection :: CollisionResult :: ContactMap :: const_iterator it2 ; for ( it2 = collision_result . contacts . begin (); it2 != collision_result . contacts . end (); ++ it2 ) { acm . setEntry ( it2 -> first . first , it2 -> first . second , true ); } collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result , copied_state , acm ); ROS_INFO_STREAM ( \"Test 6: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); \u5b8c\u5168\u306a\u885d\u7a81\u691c\u77e5 \u4eca\u307e\u3067\uff0c\u6211\u3005\u306f checkCollision \u95a2\u6570\u3092\u81ea\u5df1\u885d\u7a81\u306b\u95a2\u3057\u3066\u306e\u307f\u4f7f\u7528\u3057\u3066\u304d\u307e\u3057\u305f\u304c\uff0c \u3053\u306e\u95a2\u6570\u306f\u81ea\u5df1\u885d\u7a81\u306e\u307f\u306a\u3089\u305a\uff0c\u74b0\u5883\u4e2d\u306e\u7269\u4f53\u306b\u5bfe\u3057\u3066\u306e\u885d\u7a81\u691c\u77e5\u306b\u5bfe\u3057\u3066\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059 \uff08\u73fe\u5728\u306f\u7a7a\u3067\u3059\u304c\uff09\uff0e \u3053\u308c\u306f\u8ecc\u9053\u8a08\u753b\u30d7\u30e9\u30f3\u30ca\u3067\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u95a2\u6570\u306e\u30bb\u30c3\u30c8\u3067\u3059\uff0e \u74b0\u5883\u4e2d\u306e\u7269\u4f53\u306b\u5bfe\u3057\u3066\u306e\u885d\u7a81\u691c\u77e5\u3067\u306f\u4f59\u767d\uff08padded\uff09\u304c\u5165\u3063\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f \u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u4f59\u767d\u306f\u30ed\u30dc\u30c3\u30c8\u3092\u74b0\u5883\u4e2d\u306e\u969c\u5bb3\u7269\u304b\u3089\u3088\u308a\u9060\u3056\u3051\u305f\u307e\u307e\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u5f79\u7acb\u3061\u307e\u3059\uff0e collision_result . clear (); planning_scene . checkCollision ( collision_request , collision_result , copied_state , acm ); ROS_INFO_STREAM ( \"Test 7: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); \u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af PlanningScene \u30af\u30e9\u30b9\u306f\u7c21\u5358\u306b\u4f7f\u3048\u308b\u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e \u5236\u7d04\u6761\u4ef6\u306f\uff12\u30bf\u30a4\u30d7\u306b\u5225\u308c\u307e\u3059\uff0e : (a) KinematicConstraint \u30bb\u30c3\u30c8\u304b\u3089\u9078\u629e\u3055\u308c\u308b\u5236\u7d04\u6761\u4ef6\uff0e\u4f8b\u3048\u3070 JointConstraint , PositionConstraint , OrientationConstraint , \u305d\u3057\u3066\uff0c VisibilityConstraint \u3067\u3059\uff0e (b)\u30e6\u30fc\u30b6\u30fc\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u901a\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u5236\u7d04\u6761\u4ef6\u3067\u3059\uff0e \u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u7c21\u5358\u306aKinematicConstraint\u306e\u4f8b\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff0e \u904b\u52d5\u5b66\u4e0a\u306e\u5236\u7d04(kinematic constraint)\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b \u6211\u3005\u306f\u307e\u305a\u306f\u3058\u3081\u306bPanda\u30ed\u30dc\u30c3\u30c8\u306epanda_arm\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3059\u308b\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e \u7c21\u5358\u306a\u4f4d\u7f6e\u3068\u59ff\u52e2\u306e\u5236\u7d04\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\u4fbf\u5229\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u5236\u7d04\u6761\u4ef6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b \u7740\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u3053\u308c\u3089\u306e\u95a2\u6570\u306fmoveit_core\u306ekinematic_constraints\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b\u3042\u308b utils.h \u306b\u3042\u308a\u307e\u3059\uff09 std :: string end_effector_name = joint_model_group -> getLinkModelNames (). back (); geometry_msgs :: PoseStamped desired_pose ; desired_pose . pose . orientation . w = 1.0 ; desired_pose . pose . position . x = 0.3 ; desired_pose . pose . position . y = - 0.185 ; desired_pose . pose . position . z = 0.5 ; desired_pose . header . frame_id = \"panda_link0\" ; moveit_msgs :: Constraints goal_constraint = kinematic_constraints :: constructGoalConstraints ( end_effector_name , desired_pose ); PlanningScne\u30af\u30e9\u30b9\u306b\u3042\u308b isStateConstrained \u95a2\u6570\u3092\u7528\u3044\u3066\uff0c \u3053\u306e\u5236\u7d04\u6761\u4ef6\u306b\u95a2\u3059\u308b\u72b6\u614b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e copied_state . setToRandomPositions (); copied_state . update (); bool constrained = planning_scene . isStateConstrained ( copied_state , goal_constraint ); ROS_INFO_STREAM ( \"Test 8: Random state is \" << ( constrained ? \"constrained\" : \"not constrained\" )); \u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af\u306b\u306f\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\uff08\u3042\u306a\u305f\u304c\uff0c\u4f55\u5ea6\u3082\u540c\u3058\u5236\u7d04\u6761\u4ef6\u306b \u5bfe\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3068\u304d\u306e\u8a71\u3067\u3059\u304c\uff0e\u4f8b\u3048\u3070\uff0c\u8ecc\u9053\u751f\u6210\u30d7\u30e9\u30f3\u30ca\u30fc\u306e\u4e2d\u3067\u3068\u304b\uff09 \u6211\u3005\u306f\u6700\u521d\u306b KinematicConstraintSet \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u3053\u306e\u30af\u30e9\u30b9\u306fROS Constraints\u30e1\u30c3\u30bb\u30fc\u30b8\u306e \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\uff08\u4e0b\u6e96\u5099\uff09\u3068\u7d20\u65e9\u304f\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u884c\u3046\u30af\u30e9\u30b9\u3067\u3059\uff0e kinematic_constraints :: KinematicConstraintSet kinematic_constraint_set ( kinematic_model ); kinematic_constraint_set . add ( goal_constraint , planning_scene . getTransforms ()); bool constrained_2 = planning_scene . isStateConstrained ( copied_state , kinematic_constraint_set ); ROS_INFO_STREAM ( \"Test 9: Random state is \" << ( constrained_2 ? \"constrained\" : \"not constrained\" )); KinematicConstraintSet\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\uff0c\u3053\u308c\u3092\u76f4\u63a5\u7684\u306b\u884c\u3046\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\uff0e kinematic_constraints :: ConstraintEvaluationResult constraint_eval_result = kinematic_constraint_set . decide ( copied_state ); ROS_INFO_STREAM ( \"Test 10: Random state is \" << ( constraint_eval_result . satisfied ? \"constrained\" : \"not constrained\" )); \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u5236\u7d04\u6761\u4ef6 \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u5236\u7d04\u6761\u4ef6\u3092PlannningScene\u30af\u30e9\u30b9\u306b\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u308c\u306f setStateFeasibilityPredicate \u95a2\u6570\u3092\u7528\u3044\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066 \u884c\u3044\u307e\u3059\uff0e\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\uff0c\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\uff0cPanda\u30a2\u30fc\u30e0\u306e\"panda_joint1\"\u304c\u6b63\u306e\u89d2\u5ea6 \u306b\u3042\u308b\u304b\uff0c\u8ca0\u306e\u89d2\u5ea6\u306b\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u4f8b\u3068\u3057\u3066\u7528\u3044\u307e\u3059\uff0e bool stateFeasibilityTestExample ( const robot_state :: RobotState & kinematic_state , bool verbose ) { const double * joint_values = kinematic_state . getJointPositions ( \"panda_joint1\" ); return ( joint_values [ 0 ] > 0.0 ); } Note Feasibility\u3092\u5b9f\u73fe\u53ef\u80fd\u6027\u3068\u8a33\u3057\u3066\u307e\u3059\uff0e \u3055\u3042\uff0c\u3053\u308c\u3067\uff0c isStateFeasible \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306f\u3044\u3064\u3082\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570 \u3082\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u3067\u3057\u3087\u3046\uff0e planning_scene . setStateFeasibilityPredicate ( stateFeasibilityTestExample ); bool state_feasible = planning_scene . isStateFeasible ( copied_state ); ROS_INFO_STREAM ( \"Test 11: Random state is \" << ( state_feasible ? \"feasible\" : \"not feasible\" )); isStateValid \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306f\u3044\u3064\u3082\uff0c\uff13\u3064\u306e\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e (a) \u885d\u7a81\u691c\u77e5 (b) \u5236\u7d04\u6761\u4ef6\u30c1\u30a7\u30c3\u30af (c) \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u7528\u3044\u305f\u5b9f\u73fe\u53ef\u80fd\u6027\u30c1\u30a7\u30c3\u30af bool state_valid = planning_scene . isStateValid ( copied_state , kinematic_constraint_set , \"panda_arm\" ); ROS_INFO_STREAM ( \"Test 12: Random state is \" << ( state_valid ? \"valid\" : \"not valid\" )); MoveIt!\u3068OMPL\u3092\u901a\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30e9\u30f3\u30ca\u30fc\u306f\u885d\u7a81\u691c\u77e5\uff0c\u5236\u7d04\u6761\u4ef6\u30c1\u30a7\u30c3\u30af\uff0c\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u7528\u3044\u305f\u5b9f\u73fe\u53ef\u80fd\u6027\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u6c17\u306b\u7559\u3081\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\uff0e Launch\u30d5\u30a1\u30a4\u30eb launch\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306f \u3053\u3053 \u306b\u3042\u308a\u307e\u3059\uff0e\u3059\u3079\u3066\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fmoveit_tutorial\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3066\u304a\u308a \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u30b3\u30fc\u30c9\u306e\u5b9f\u884c moveit_tutorial\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306blaunch\u30d5\u30a1\u30a4\u30eb\u3092roslaunch\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e roslaunch moveit_tutorials planning_scene_tutorial.launch \u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c \u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u304c\u4e88\u60f3\u3055\u308c\u307e\u3059\u304c\uff0c\u95a2\u7bc0\u89d2\u5ea6\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067 \u6570\u5024\u306f\u7570\u306a\u308b\u3067\u3057\u3087\u3046\uff0e ros.moveit_tutorials: Test 1 : Current state is not in self collision ros.moveit_tutorials: Test 2 : Current state is not in self collision ros.moveit_tutorials: Test 3 : Current state is not in self collision ros.moveit_tutorials: Test 4 : Current state is valid ros.moveit_tutorials: Test 5 : Current state is in self collision ros.moveit_tutorials: Contact between: panda_leftfinger and panda_link1 ros.moveit_tutorials: Contact between: panda_link1 and panda_rightfinger ros.moveit_tutorials: Test 6 : Current state is not in self collision ros.moveit_tutorials: Test 7 : Current state is not in self collision ros.moveit_tutorials: Test 8 : Random state is not constrained ros.moveit_tutorials: Test 9 : Random state is not constrained ros.moveit_tutorials: Test 10 : Random state is not constrained ros.moveit_tutorials: Test 11 : Random state is feasible ros.moveit_tutorials: Test 12 : Random state is not valid Note \u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u7570\u306a\u3063\u3066\u3082\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u30d6\u30ed\u30b0 \u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e","title":"\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3"},{"location":"5/#_1","text":"\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3 \u30af\u30e9\u30b9\u306f\u4e3b\u306b\uff0c \u885d\u7a81\u691c\u77e5(collision checking) \u3068 \u5236\u7d04\u691c\u8a3c(constraint checking) \u306e\u305f\u3081\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fC++\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e","title":"\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u30b7\u30fc\u30f3"},{"location":"5/#_2","text":"\u6628\u6669\u306f\u3072\u3069\u96e8\u3060\u3063\u305f\uff0c\u672c\u5f53\u306b\u3072\u3069\u3044\u96e8\u3067\uff0c\u4f55\u3082\u304b\u3082\u6d41\u3055\u308c\u3066\u3057\u307e\u3063\u305f\uff0e \u3057\u304b\u3057\uff0c\u4e00\u3064\u3060\u3051\u6b8b\u3055\u308c\u305f\u3082\u306e\u304c\u3042\u308b\uff0e\u305d\u308c\u304c\uff0c \u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01 \u3060\uff0e \u3059\u3079\u3066\u6d41\u3055\u308c\u3066\u3057\u307e\u3063\u305f\u306e\u3060\u304b\u3089\uff0c\u305d\u3053\u304b\u3089\u59cb\u3081\u308b\u3057\u304b\u3042\u308b\u307e\u3044\uff0e","title":"\u3053\u3053\u304b\u3089\u59cb\u3081\u3088\u3046\uff01"},{"location":"5/#_3","text":"\u5168\u90e8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f \u3053\u3053 \u306b\u3042\u308b\uff0e","title":"\u5168\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9"},{"location":"5/#_4","text":"PlanningScene \u30af\u30e9\u30b9\u306f RobotModel \u30af\u30e9\u30b9\u304bURDF\u3068SRDF\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e \u3057\u304b\u3057\uff0c\u3053\u308c\u3089\u306e\u65b9\u6cd5\u3067 PlanningScene \u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53ef\u3059\u308b\u306e\u306f\u304a\u3059\u3059\u3081\u306e\u65b9\u6cd5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e PlanningSceneMonitor \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066 PlanningScene \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u3068\u30ed\u30dc\u30c3\u30c8\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b \u30bb\u30f3\u30b5\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b PlanningScene \u3092\u7dad\u6301\u3059\u308b\u3053\u3068\u304c\u304a\u3059\u3059\u3081\u3067\u3059\uff0e (\u8a73\u3057\u304f\u306f\u6b21\u306e\u7ae0\u3067\u8b70\u8ad6\u3057\u307e\u3059) \u3053\u306e\u7ae0\u3067\u306f\uff0c\u6211\u3005\u306f PlannningScene \u30af\u30e9\u30b9\u3092\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u307e\u3059\u304c \u3053\u308c\u306f\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3067\u3059\uff0e robot_model_loader :: RobotModelLoader robot_model_loader ( \"robot_description\" ); robot_model :: RobotModelPtr kinematic_model = robot_model_loader . getModel (); planning_scene :: PlanningScene planning_scene ( kinematic_model );","title":"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7"},{"location":"5/#_5","text":"","title":"\u885d\u7a81\u691c\u77e5"},{"location":"5/#self-collision-checking","text":"\u6700\u521d\u306b\u6211\u3005\u304c\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306f\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u304c\u81ea\u5df1\u885d\u7a81\u72b6\u614b\u306b\u3042\u308b\u304b\u3069\u3046\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e \u4f8b\u3048\u3070\uff0c\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u8a2d\u5b9a\u306b\u304a\u3044\u3066\u5404\u30d1\u30fc\u30c4\u540c\u58eb\u304c\u304a\u4e92\u3044\u306b\u63a5\u89e6\u3057\u3066\u3044\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u8abf\u3079\u307e\u3059\uff0e \u81ea\u5df1\u885d\u7a81\u691c\u77e5\u3092\u8abf\u3079\u308b\u305f\u3081\u306b CollisionRequest \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068 CollisionResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\uff0c\u305d\u308c\u3092\u885d\u7a81\u691c\u77e5\u95a2\u6570\u306b\u6e21\u3057\u307e\u3059\uff0e \u7d50\u679c(CollisionResult)\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u304c\u81ea\u5df1\u885d\u7a81\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e \u81ea\u5df1\u885d\u7a81\u691c\u77e5\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u30d1\u30c3\u30c9\u306a\u3057( Unpadded )\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e \u4f8b\u3048\u3070\uff0c\u885d\u7a81\u691c\u77e5\u306fURDF\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u7528\u30e1\u30c3\u30b7\u30e5\u3092\u76f4\u63a5\u7684\u306b\u4f7f\u7528\u3057\uff0c \u3053\u306e\u3068\u304d\u4f7f\u7528\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u7528\u30e1\u30c3\u30b7\u30e5\u306b\u306f\u8ffd\u52a0\u306e\u4f59\u767d( Padding )\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\uff0e collision_detection :: CollisionRequest collision_request ; collision_detection :: CollisionResult collision_result ; planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 1: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" );","title":"\u81ea\u5df1\u885d\u7a81\u691c\u77e5(Self-collision checking)"},{"location":"5/#_6","text":"\u3055\u3042\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u72b6\u614b\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e PlanningScene \u30af\u30e9\u30b9\u306f\u73fe\u5728\u306e\u72b6\u614b\u3092\u5185\u90e8\u306b\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\uff0e \u6211\u3005\u306f\u305d\u308c\u3092\u53c2\u7167\u3057\uff0c\u305d\u308c\u3092\u5909\u66f4\u3057\uff0c\u305d\u3057\u3066\uff0c\u65b0\u3057\u3044\u30ed\u30dc\u30c3\u30c8\u306e\u8a2d\u5b9a\u306b\u5bfe\u3057\u3066\u885d\u7a81\u691c\u77e5\u304c\u8d77\u3053\u308b\u304b\u3069\u3046\u304b \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u65b0\u3057\u3044\u885d\u7a81\u691c\u77e5\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b collision_result \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30af\u30ea\u30a2\u3057\u3066\u304a\u304f \u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\uff0e robot_state :: RobotState & current_state = planning_scene . getCurrentStateNonConst (); current_state . setToRandomPositions (); collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 2: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" );","title":"\u72b6\u614b\u306e\u5909\u66f4"},{"location":"5/#_7","text":"\u3055\u3042\uff0c\u3044\u3088\u3044\u3088\uff0c\u6211\u3005\u306fPanda\u30ed\u30dc\u30c3\u30c8\u306e\u30cf\u30f3\u30c9\u306e\u90e8\u5206 \u306e\u307f \u306b\u5bfe\u3057\u3066\u885d\u7a81\u691c\u77e5\u3092\u884c\u3044\u307e\u3059\uff0e \u3064\u307e\u308a\uff0c\u30cf\u30f3\u30c9\u3068\u30ed\u30dc\u30c3\u30c8\u306e\u305d\u306e\u4ed6\u306e\u90e8\u54c1\u304c\u885d\u7a81\u3057\u3066\u3044\u308b\u304b\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e \u6211\u3005\u306f\u3053\u308c\u3092\u30b0\u30eb\u30fc\u30d7\u30cd\u30fc\u30e0\"hand\"\u3092 collision_request \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e collision_request . group_name = \"hand\" ; current_state . setToRandomPositions (); collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 3: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" );","title":"\u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3059\u308b\u30c1\u30a7\u30c3\u30af"},{"location":"5/#_8","text":"\u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u81ea\u5df1\u885d\u7a81\u3059\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u59ff\u52e2\u306bPanda\u30a2\u30fc\u30e0\u3092\u79fb\u52d5\u3055\u305b\u307e\u3057\u3087\u3046\uff0e \u5b9f\u969b\uff0c\u3053\u306e\u72b6\u614b\u306fPanda\u30a2\u30fc\u30e0\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u30ea\u30df\u30c3\u30c8\u306e\u5916\u5074\u3067\u3042\u308a\uff0c\u76f4\u63a5\u7684\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3053\u3068\u306b \u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e std :: vector < double > joint_values = { 0.0 , 0.0 , 0.0 , - 2.9 , 0.0 , 1.4 , 0.0 }; const robot_model :: JointModelGroup * joint_model_group = current_state . getJointModelGroup ( \"panda_arm\" ); current_state . setJointGroupPositions ( joint_model_group , joint_values ); ROS_INFO_STREAM ( \"Test 4: Current state is \" << ( current_state . satisfiesBounds ( joint_model_group ) ? \"valid\" : \"not valid\" )); \u3055\u3042\uff0c\u6211\u3005\u306f\u5148\u7a0b\u8a2d\u5b9a\u3057\u305f\u885d\u7a81\u3057\u3066\u3044\u308b\u3067\u3042\u308d\u3046Panda\u30a2\u30fc\u30e0\u304b\u3089\u885d\u7a81\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u6211\u3005\u306f\u885d\u7a81\u60c5\u5831(contact information)\u3092\u885d\u7a81\u30ea\u30af\u30a8\u30b9\u30c8(collision requiest)\u306b \u9069\u5207\u306a\u60c5\u5831\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u885d\u7a81\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f\u8fd4\u3063\u3066\u304f\u308b \u6700\u5927\u306e\u885d\u7a81\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u3053\u306e\u885d\u7a81\u6570\u306f\u5927\u304d\u306a\u6570\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\uff0e collision_request . contacts = true ; collision_request . max_contacts = 1000 ; collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result ); ROS_INFO_STREAM ( \"Test 5: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" ); collision_detection :: CollisionResult :: ContactMap :: const_iterator it ; for ( it = collision_result . contacts . begin (); it != collision_result . contacts . end (); ++ it ) { ROS_INFO ( \"Contact between: %s and %s\" , it -> first . first . c_str (), it -> first . second . c_str ()); }","title":"\u885d\u7a81\u60c5\u5831\u306e\u53d6\u5f97"},{"location":"5/#allowed-collision-matrix","text":"Allowd Collision Matrix (ACM) \u30af\u30e9\u30b9\u306f\uff0c\u3042\u308b\u7269\u4f53\u9593\uff08\u4f8b\u3048\u3070\uff0c\u30ed\u30dc\u30c3\u30c8\u306e\u30d1\u30fc\u30c4\u3068\u7a7a\u9593\u5185\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3067 \u8d77\u3053\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u885d\u7a81\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3092\u4f1d\u3048\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff0e \u6211\u3005\u306f\u885d\u7a81\u691c\u77e5\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u306b\u4e0a\u8ff0\u3057\u305f\u30ea\u30f3\u30af\u9593\u306e\u3059\u3079\u3066\u306e\u885d\u7a81\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3092\u4f1d\u3048\u308b\u3053\u3068\u304c \u3067\u304d\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\uff0c\u305f\u3068\u3048\uff0c\u5b9f\u969b\u306f\u305d\u306e\u30ea\u30f3\u30af\u304c\u885d\u7a81\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\uff0c \u885d\u7a81\u691c\u77e5\u95a2\u6570\u306f\u305d\u306e\u885d\u7a81\u3092\u7121\u8996\u3057\uff0c\u30ed\u30dc\u30c3\u30c8\u304c\u3053\u306e\u7279\u5b9a\u306e\u72b6\u614b\u306b\u5bfe\u3057\u3066\uff0c\u885d\u7a81\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092 \u8fd4\u3057\u307e\u3059\uff0e \u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff0c\u6211\u3005\u304c\u3069\u306e\u3088\u3046\u306bAllowed Collision Matrix\u3068\u73fe\u5728\u306e\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057 \u305d\u3057\u3066\uff0c\u305d\u308c\u3092\u9451\u8cde\u691c\u77e5\u95a2\u6570\u306b\u3069\u306e\u3088\u3046\u306b\u6e21\u3059\u304b\u3068\u3044\u3046\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\uff0e collision_detection :: AllowedCollisionMatrix acm = planning_scene . getAllowedCollisionMatrix (); robot_state :: RobotState copied_state = planning_scene . getCurrentState (); collision_detection :: CollisionResult :: ContactMap :: const_iterator it2 ; for ( it2 = collision_result . contacts . begin (); it2 != collision_result . contacts . end (); ++ it2 ) { acm . setEntry ( it2 -> first . first , it2 -> first . second , true ); } collision_result . clear (); planning_scene . checkSelfCollision ( collision_request , collision_result , copied_state , acm ); ROS_INFO_STREAM ( \"Test 6: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" );","title":"Allowed Collision Matrix\u306e\u66f4\u65b0"},{"location":"5/#_9","text":"\u4eca\u307e\u3067\uff0c\u6211\u3005\u306f checkCollision \u95a2\u6570\u3092\u81ea\u5df1\u885d\u7a81\u306b\u95a2\u3057\u3066\u306e\u307f\u4f7f\u7528\u3057\u3066\u304d\u307e\u3057\u305f\u304c\uff0c \u3053\u306e\u95a2\u6570\u306f\u81ea\u5df1\u885d\u7a81\u306e\u307f\u306a\u3089\u305a\uff0c\u74b0\u5883\u4e2d\u306e\u7269\u4f53\u306b\u5bfe\u3057\u3066\u306e\u885d\u7a81\u691c\u77e5\u306b\u5bfe\u3057\u3066\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059 \uff08\u73fe\u5728\u306f\u7a7a\u3067\u3059\u304c\uff09\uff0e \u3053\u308c\u306f\u8ecc\u9053\u8a08\u753b\u30d7\u30e9\u30f3\u30ca\u3067\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u885d\u7a81\u691c\u77e5\u95a2\u6570\u306e\u30bb\u30c3\u30c8\u3067\u3059\uff0e \u74b0\u5883\u4e2d\u306e\u7269\u4f53\u306b\u5bfe\u3057\u3066\u306e\u885d\u7a81\u691c\u77e5\u3067\u306f\u4f59\u767d\uff08padded\uff09\u304c\u5165\u3063\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u306b\u6ce8\u610f \u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u4f59\u767d\u306f\u30ed\u30dc\u30c3\u30c8\u3092\u74b0\u5883\u4e2d\u306e\u969c\u5bb3\u7269\u304b\u3089\u3088\u308a\u9060\u3056\u3051\u305f\u307e\u307e\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u5f79\u7acb\u3061\u307e\u3059\uff0e collision_result . clear (); planning_scene . checkCollision ( collision_request , collision_result , copied_state , acm ); ROS_INFO_STREAM ( \"Test 7: Current state is \" << ( collision_result . collision ? \"in\" : \"not in\" ) << \" self collision\" );","title":"\u5b8c\u5168\u306a\u885d\u7a81\u691c\u77e5"},{"location":"5/#_10","text":"PlanningScene \u30af\u30e9\u30b9\u306f\u7c21\u5358\u306b\u4f7f\u3048\u308b\u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u95a2\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e \u5236\u7d04\u6761\u4ef6\u306f\uff12\u30bf\u30a4\u30d7\u306b\u5225\u308c\u307e\u3059\uff0e : (a) KinematicConstraint \u30bb\u30c3\u30c8\u304b\u3089\u9078\u629e\u3055\u308c\u308b\u5236\u7d04\u6761\u4ef6\uff0e\u4f8b\u3048\u3070 JointConstraint , PositionConstraint , OrientationConstraint , \u305d\u3057\u3066\uff0c VisibilityConstraint \u3067\u3059\uff0e (b)\u30e6\u30fc\u30b6\u30fc\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u901a\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u5236\u7d04\u6761\u4ef6\u3067\u3059\uff0e \u307e\u305a\u306f\u3058\u3081\u306b\uff0c\u7c21\u5358\u306aKinematicConstraint\u306e\u4f8b\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff0e","title":"\u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af"},{"location":"5/#kinematic-constraint","text":"\u6211\u3005\u306f\u307e\u305a\u306f\u3058\u3081\u306bPanda\u30ed\u30dc\u30c3\u30c8\u306epanda_arm\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3059\u308b\u30a8\u30f3\u30c9\u30a8\u30d5\u30a7\u30af\u30bf\u306e \u7c21\u5358\u306a\u4f4d\u7f6e\u3068\u59ff\u52e2\u306e\u5236\u7d04\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\u4fbf\u5229\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u5236\u7d04\u6761\u4ef6\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b \u7740\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u3053\u308c\u3089\u306e\u95a2\u6570\u306fmoveit_core\u306ekinematic_constraints\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b\u3042\u308b utils.h \u306b\u3042\u308a\u307e\u3059\uff09 std :: string end_effector_name = joint_model_group -> getLinkModelNames (). back (); geometry_msgs :: PoseStamped desired_pose ; desired_pose . pose . orientation . w = 1.0 ; desired_pose . pose . position . x = 0.3 ; desired_pose . pose . position . y = - 0.185 ; desired_pose . pose . position . z = 0.5 ; desired_pose . header . frame_id = \"panda_link0\" ; moveit_msgs :: Constraints goal_constraint = kinematic_constraints :: constructGoalConstraints ( end_effector_name , desired_pose ); PlanningScne\u30af\u30e9\u30b9\u306b\u3042\u308b isStateConstrained \u95a2\u6570\u3092\u7528\u3044\u3066\uff0c \u3053\u306e\u5236\u7d04\u6761\u4ef6\u306b\u95a2\u3059\u308b\u72b6\u614b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e copied_state . setToRandomPositions (); copied_state . update (); bool constrained = planning_scene . isStateConstrained ( copied_state , goal_constraint ); ROS_INFO_STREAM ( \"Test 8: Random state is \" << ( constrained ? \"constrained\" : \"not constrained\" )); \u5236\u7d04\u6761\u4ef6\u306e\u30c1\u30a7\u30c3\u30af\u306b\u306f\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\uff08\u3042\u306a\u305f\u304c\uff0c\u4f55\u5ea6\u3082\u540c\u3058\u5236\u7d04\u6761\u4ef6\u306b \u5bfe\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3068\u304d\u306e\u8a71\u3067\u3059\u304c\uff0e\u4f8b\u3048\u3070\uff0c\u8ecc\u9053\u751f\u6210\u30d7\u30e9\u30f3\u30ca\u30fc\u306e\u4e2d\u3067\u3068\u304b\uff09 \u6211\u3005\u306f\u6700\u521d\u306b KinematicConstraintSet \u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u3053\u306e\u30af\u30e9\u30b9\u306fROS Constraints\u30e1\u30c3\u30bb\u30fc\u30b8\u306e \u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\uff08\u4e0b\u6e96\u5099\uff09\u3068\u7d20\u65e9\u304f\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u884c\u3046\u30af\u30e9\u30b9\u3067\u3059\uff0e kinematic_constraints :: KinematicConstraintSet kinematic_constraint_set ( kinematic_model ); kinematic_constraint_set . add ( goal_constraint , planning_scene . getTransforms ()); bool constrained_2 = planning_scene . isStateConstrained ( copied_state , kinematic_constraint_set ); ROS_INFO_STREAM ( \"Test 9: Random state is \" << ( constrained_2 ? \"constrained\" : \"not constrained\" )); KinematicConstraintSet\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\uff0c\u3053\u308c\u3092\u76f4\u63a5\u7684\u306b\u884c\u3046\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\uff0e kinematic_constraints :: ConstraintEvaluationResult constraint_eval_result = kinematic_constraint_set . decide ( copied_state ); ROS_INFO_STREAM ( \"Test 10: Random state is \" << ( constraint_eval_result . satisfied ? \"constrained\" : \"not constrained\" ));","title":"\u904b\u52d5\u5b66\u4e0a\u306e\u5236\u7d04(kinematic constraint)\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b"},{"location":"5/#_11","text":"\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u5236\u7d04\u6761\u4ef6\u3092PlannningScene\u30af\u30e9\u30b9\u306b\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e \u3053\u308c\u306f setStateFeasibilityPredicate \u95a2\u6570\u3092\u7528\u3044\u3066\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066 \u884c\u3044\u307e\u3059\uff0e\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\uff0c\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\uff0cPanda\u30a2\u30fc\u30e0\u306e\"panda_joint1\"\u304c\u6b63\u306e\u89d2\u5ea6 \u306b\u3042\u308b\u304b\uff0c\u8ca0\u306e\u89d2\u5ea6\u306b\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u4f8b\u3068\u3057\u3066\u7528\u3044\u307e\u3059\uff0e bool stateFeasibilityTestExample ( const robot_state :: RobotState & kinematic_state , bool verbose ) { const double * joint_values = kinematic_state . getJointPositions ( \"panda_joint1\" ); return ( joint_values [ 0 ] > 0.0 ); } Note Feasibility\u3092\u5b9f\u73fe\u53ef\u80fd\u6027\u3068\u8a33\u3057\u3066\u307e\u3059\uff0e \u3055\u3042\uff0c\u3053\u308c\u3067\uff0c isStateFeasible \u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306f\u3044\u3064\u3082\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570 \u3082\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u3067\u3057\u3087\u3046\uff0e planning_scene . setStateFeasibilityPredicate ( stateFeasibilityTestExample ); bool state_feasible = planning_scene . isStateFeasible ( copied_state ); ROS_INFO_STREAM ( \"Test 11: Random state is \" << ( state_feasible ? \"feasible\" : \"not feasible\" )); isStateValid \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u304d\u306f\u3044\u3064\u3082\uff0c\uff13\u3064\u306e\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e (a) \u885d\u7a81\u691c\u77e5 (b) \u5236\u7d04\u6761\u4ef6\u30c1\u30a7\u30c3\u30af (c) \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u7528\u3044\u305f\u5b9f\u73fe\u53ef\u80fd\u6027\u30c1\u30a7\u30c3\u30af bool state_valid = planning_scene . isStateValid ( copied_state , kinematic_constraint_set , \"panda_arm\" ); ROS_INFO_STREAM ( \"Test 12: Random state is \" << ( state_valid ? \"valid\" : \"not valid\" )); MoveIt!\u3068OMPL\u3092\u901a\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3059\u3079\u3066\u306e\u30d7\u30e9\u30f3\u30ca\u30fc\u306f\u885d\u7a81\u691c\u77e5\uff0c\u5236\u7d04\u6761\u4ef6\u30c1\u30a7\u30c3\u30af\uff0c\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u7528\u3044\u305f\u5b9f\u73fe\u53ef\u80fd\u6027\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u6c17\u306b\u7559\u3081\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\uff0e","title":"\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u5236\u7d04\u6761\u4ef6"},{"location":"5/#launch","text":"launch\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306f \u3053\u3053 \u306b\u3042\u308a\u307e\u3059\uff0e\u3059\u3079\u3066\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fmoveit_tutorial\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3066\u304a\u308a \u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e","title":"Launch\u30d5\u30a1\u30a4\u30eb"},{"location":"5/#_12","text":"moveit_tutorial\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306blaunch\u30d5\u30a1\u30a4\u30eb\u3092roslaunch\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e roslaunch moveit_tutorials planning_scene_tutorial.launch","title":"\u30b3\u30fc\u30c9\u306e\u5b9f\u884c"},{"location":"5/#_13","text":"\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u304c\u4e88\u60f3\u3055\u308c\u307e\u3059\u304c\uff0c\u95a2\u7bc0\u89d2\u5ea6\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067 \u6570\u5024\u306f\u7570\u306a\u308b\u3067\u3057\u3087\u3046\uff0e ros.moveit_tutorials: Test 1 : Current state is not in self collision ros.moveit_tutorials: Test 2 : Current state is not in self collision ros.moveit_tutorials: Test 3 : Current state is not in self collision ros.moveit_tutorials: Test 4 : Current state is valid ros.moveit_tutorials: Test 5 : Current state is in self collision ros.moveit_tutorials: Contact between: panda_leftfinger and panda_link1 ros.moveit_tutorials: Contact between: panda_link1 and panda_rightfinger ros.moveit_tutorials: Test 6 : Current state is not in self collision ros.moveit_tutorials: Test 7 : Current state is not in self collision ros.moveit_tutorials: Test 8 : Random state is not constrained ros.moveit_tutorials: Test 9 : Random state is not constrained ros.moveit_tutorials: Test 10 : Random state is not constrained ros.moveit_tutorials: Test 11 : Random state is feasible ros.moveit_tutorials: Test 12 : Random state is not valid Note \u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u7570\u306a\u3063\u3066\u3082\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff0e \u3053\u306e\u30d6\u30ed\u30b0 \u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e","title":"\u4e88\u60f3\u3055\u308c\u308b\u7d50\u679c"},{"location":"dot/","text":"G Earth Earth Mars Mars Earth->Mars","title":"Dot"},{"location":"mermaid/","text":"H A graph LR A --> B","title":"H"},{"location":"mermaid/#h","text":"","title":"H"},{"location":"mermaid/#a","text":"graph LR A --> B","title":"A"}]}